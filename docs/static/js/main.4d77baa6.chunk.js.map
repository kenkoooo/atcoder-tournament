{"version":3,"sources":["components/RatingName.tsx","utils/Constants.ts","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","utils/API.ts","pages/Tournament.tsx","pages/TournamentListPage.tsx","pages/TournamentRankingPage.tsx","pages/UserHistoryPage.tsx","pages/RecordPage.tsx","App.tsx","index.tsx"],"names":["useRatingColorStyle","makeStyles","red","fontWeight","color","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","userId","children","rating","startsWith","Link","className","component","RouterLink","to","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","backgroundColor","nameContainer","padding","margin","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","user_id","Box","display","justifyContent","alignItems","item","flexDirection","itemChildren","itemChild","marginTop","marginBottom","position","content","top","right","transform","width","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","length","depthLimit","undefined","map","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","e","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","toFixed","LeagueTable","seasonId","league","Math","max","leage","filter","TableContainer","Table","TableHead","includes","TableBody","idx","promotionRank","colSpan","dropRank","battleResult","j","k","fetchTournamentSeason6","a","fetch","usersResponse","text","usersText","previousBracketsResponse","previousBracketsText","ratingResponse","ratingText","wasm","construct_tournament","JSON","parse","useUserHistories","useSWR","url","then","response","json","revalidateOnFocus","revalidateOnReconnect","useTournamentList","SingleWinnerTable","top4","Container","Object","entries","users","variant","m","Typography","AntTab","withStyles","root","selected","Tab","Tournament","useTournament","data","useState","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","CssBaseline","Grid","container","justify","direction","noWrap","Tabs","value","onChange","v","centered","label","Button","onClick","promotion_rank","drop_rank","CircularProgress","useStyles","theme","flexGrow","maxWidth","paper","spacing","marginRight","caption","link","Winners","winners","ranking","sort","b","slice","Paper","xs","season","expandable","TournamentListPage","tournaments","localeCompare","table","TournamentRankingPage","useParams","find","class","UserHistoryPage","histories","userHistory","sorted","parseInt","winCount","top_k","secondCount","a1Count","href","topK","klass","final_rank","RecordPage","values","h","fourCount","x","createMuiTheme","palette","type","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","textDecoration","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","target","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d77baa6.chunk.js","sourcesContent":["import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { DUMMY_USER_ID_PREFIX } from \"../utils/Constants\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[400],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[400],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[300],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[400],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (userId.startsWith(DUMMY_USER_ID_PREFIX)) {\n    return <>-</>;\n  }\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  return (\n    <Link className={c} component={RouterLink} to={`/user/${userId}`}>\n      {userId}\n    </Link>\n  );\n};\n","export const SEASON_ID = 6;\nexport const DUMMY_USER_ID_PREFIX = \"---non-existing-user\";\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { grey, orange } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: grey[800],\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? orange[500] : grey[400],\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\nimport { DUMMY_USER_ID_PREFIX } from \"../../utils/Constants\";\n\nconst isUsingRankSum = (seasonId: string) => [\"2\", \"3\", \"4\"].includes(seasonId);\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum.toFixed(2)}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  seasonId: string;\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n  const leage = props.league.filter(\n    (entry) => !entry.user.user_id.startsWith(DUMMY_USER_ID_PREFIX)\n  );\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">\n              {isUsingRankSum(props.seasonId) ? \"順位合計\" : \"順位調和平均\"}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leage.map((entry, idx) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={idx}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={idx}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={idx}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import useSWR from \"swr\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { UserHistory } from \"../models/UserHistory\";\n\nconst fetchTournamentSeason6 = async (): Promise<TournamentResponse> => {\n  const usersResponse = await fetch(\n    \"https://atcoder-tournament.herokuapp.com/api/users\"\n  );\n  const usersText = await usersResponse.text();\n\n  const previousBracketsResponse = await fetch(\"./bracket-5.json\");\n  const previousBracketsText = await previousBracketsResponse.text();\n\n  const ratingResponse = await fetch(\"./ratings.json\");\n  const ratingText = await ratingResponse.text();\n\n  const wasm = await import(\"../wasm/build\");\n\n  const result = wasm.construct_tournament(\n    usersText,\n    ratingText,\n    previousBracketsText\n  );\n  return JSON.parse(result);\n};\n\nexport const useTournament = (seasonId: string) => {\n  const fetcher = (url: string) => {\n    if (seasonId === \"x\") {\n      return fetchTournamentSeason6();\n    } else {\n      return fetch(url)\n        .then((response) => response.json())\n        .then((response) => response as TournamentResponse);\n    }\n  };\n  const url = `./bracket-${seasonId}.json`;\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useUserHistories = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as UserHistory[]);\n  };\n\n  const url = \"./histories.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useTournamentList = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as TournamentHistory[]);\n  };\n\n  const url = \"./tournaments.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { User } from \"../models/TournamentNode\";\nimport { useTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const tournament = useTournament(props.seasonId).data;\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n\n  const keys = Object.keys(tournament ?? {});\n  const bracket =\n    keys[selectedDivision] && tournament\n      ? tournament[keys[selectedDivision]]\n      : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {tournament ? (\n          <>\n            {keys[selectedDivision] && (\n              <SingleWinnerTable\n                top4={tournament[keys[selectedDivision]].top4}\n              />\n            )}\n            <Button onClick={() => setShowTop16(!showTop16)}>\n              {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n            </Button>\n            <Box display=\"flex\" justifyContent=\"center\">\n              {node && (\n                <GameNode\n                  tournament={node}\n                  depth={0}\n                  config={{ depthLimit, defendingChampion }}\n                />\n              )}\n            </Box>\n            {league && league.length > 0 && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n                  順位決定リーグ\n                </Typography>\n                <LeagueTable\n                  seasonId={props.seasonId}\n                  league={league}\n                  promotionRank={bracket?.promotion_rank}\n                  dropRank={bracket?.drop_rank}\n                />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { useTournamentList } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  caption: {\n    marginRight: 20,\n    minWidth: 80,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nconst Winners = (e: TournamentHistory) => {\n  const classes = useStyles();\n  const winners = e.ranking\n    .map(([rank, entry]) => ({\n      rank: rank + 1,\n      userId: entry.user_id,\n    }))\n    .sort((a, b) => a.rank - b.rank)\n    .slice(0, 4);\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Typography variant=\"h3\">\n            <Link\n              component={RouterLink}\n              to={`/tournament/${e.season}`}\n              className={classes.link}\n            >\n              第{e.season}期\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6} direction=\"column\" spacing={2}>\n          {winners.map((winner) => {\n            if (winner.rank === 1) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h4\">\n                    優勝\n                  </Typography>\n                  <Typography variant=\"h2\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else if (winner.rank === 2) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    準優勝\n                  </Typography>\n                  <Typography variant=\"h4\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    第{winner.rank}位\n                  </Typography>\n                  <Typography variant=\"h5\">{winner.userId}</Typography>\n                </Box>\n              );\n            }\n          })}\n          {e.expandable && (\n            <Box marginTop={2}>\n              <Link\n                className={classes.link}\n                component={RouterLink}\n                to={`/ranking/${e.season}`}\n              >\n                全てのランキングを表示\n              </Link>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport const TournamentListPage = () => {\n  const classes = useStyles();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  tournaments.sort((a, b) => b.season.localeCompare(a.season));\n\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h2\">過去の開催</Typography>\n      <Container>\n        {tournaments.map((e) => (\n          <Winners key={e.season} {...e} />\n        ))}\n      </Container>\n    </Container>\n  );\n};\n","import {\n  Box,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport React from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useTournamentList } from \"../utils/API\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n  table: {\n    maxWidth: 800,\n  },\n}));\nexport const TournamentRankingPage = () => {\n  const classes = useStyles();\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const ranking = tournaments.find(\n    (tournament) => tournament.season === seasonId && tournament.expandable\n  )?.ranking;\n  if (!ranking) {\n    return <p>not found</p>;\n  }\n  ranking.sort((a, b) => a[0] - b[0]);\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <TableContainer className={classes.table}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>総合順位</TableCell>\n              <TableCell>クラス</TableCell>\n              <TableCell>クラス内順位</TableCell>\n              <TableCell>ユーザー名</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ranking.map(([rank, entry]) => (\n              <TableRow key={rank}>\n                <TableCell>{rank + 1}</TableCell>\n                <TableCell>{entry.class}</TableCell>\n                <TableCell>{entry.rank}</TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\">\n                    <Link\n                      className={classes.link}\n                      component={RouterLink}\n                      to={`/user/${entry.user_id}`}\n                    >\n                      {entry.user_id}\n                    </Link>\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst formatTopK = (season: number, topK: number, klass: string) => {\n  if (topK === 1) {\n    if (klass === \"A\" || klass === \"A1\") {\n      return `第${season}期王者`;\n    } else {\n      return \"優勝\";\n    }\n  } else if (topK === 2) {\n    return \"準優勝\";\n  } else {\n    return `ベスト${topK}`;\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nexport const UserHistoryPage = () => {\n  const classes = useStyles();\n  const { user_id } = useParams<{ user_id: string }>();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const userHistory =\n    histories.find((e) => e.user_id === user_id)?.histories ?? {};\n  const sorted = Object.entries(userHistory)\n    .map(([season, result]) => ({\n      season: parseInt(season),\n      result,\n    }))\n    .sort((a, b) => b.season - a.season);\n\n  const winCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 1).length;\n  const secondCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 2).length;\n  const a1Count = sorted.filter((e) => e.result.class === \"A1\").length;\n\n  return (\n    <Container className={classes.root}>\n      <Grid container>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <Link\n              className={classes.link}\n              href={`https://atcoder.jp/users/${user_id}`}\n            >\n              {user_id}\n            </Link>\n          </Typography>\n          {winCount > 0 && (\n            <Typography variant=\"h6\">優勝{winCount}回</Typography>\n          )}\n          {secondCount > 0 && (\n            <Typography variant=\"h6\">準優勝{secondCount}回</Typography>\n          )}\n          {a1Count > 0 && (\n            <Typography variant=\"h6\">A1在籍{a1Count}期</Typography>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          {sorted.map((e) => (\n            <Paper key={e.season} className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\">\n                    <Link\n                      component={RouterLink}\n                      to={`/tournament/${e.season}`}\n                      className={classes.link}\n                    >\n                      第{e.season}期 {e.result.class}クラス\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item xs={4} direction=\"column\">\n                  <Typography variant=\"body1\">トーナメント</Typography>\n                  <Typography variant=\"h4\">\n                    {formatTopK(e.season, e.result.top_k, e.result.class)}\n                  </Typography>\n                </Grid>\n                {e.result.final_rank && (\n                  <Grid item xs direction=\"column\">\n                    <Typography variant=\"body1\">最終順位</Typography>\n                    <Typography variant=\"h4\">\n                      {e.result.final_rank}位\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          ))}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n}));\nexport const RecordPage = () => {\n  const classes = useStyles();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const users = histories\n    .map((e) => {\n      const userId = e.user_id;\n      const histories = Object.values(e.histories).filter(\n        (h) => h.class === \"A1\" || h.class === \"A\"\n      );\n      const winCount = histories.filter((h) => h.top_k === 1).length;\n      const secondCount = histories.filter((h) => h.top_k === 2).length;\n      const fourCount = histories.filter((h) => h.top_k === 4).length;\n      const a1Count = histories.filter((h) => h.class === \"A1\").length;\n      return {\n        a1Count,\n        winCount,\n        secondCount,\n        fourCount,\n        userId,\n      };\n    })\n    .filter((x) => x.a1Count + x.winCount + x.secondCount + x.fourCount > 0);\n  users.sort((a, b) => {\n    if (a.winCount !== b.winCount) {\n      return b.winCount - a.winCount;\n    }\n    if (a.secondCount !== b.secondCount) {\n      return b.secondCount - a.secondCount;\n    }\n    if (a.fourCount !== b.fourCount) {\n      return b.fourCount - a.fourCount;\n    }\n    if (a.a1Count !== b.a1Count) {\n      return b.a1Count - a.a1Count;\n    }\n    return a.userId.localeCompare(b.userId);\n  });\n\n  return (\n    <Container>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"head\">ユーザー</TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              準優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              ベスト4\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              A1在籍\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.userId}>\n              <TableCell variant=\"head\">\n                <Typography variant=\"h6\">\n                  <Link\n                    className={classes.link}\n                    component={RouterLink}\n                    to={`/user/${user.userId}`}\n                  >\n                    {user.userId}\n                  </Link>\n                </Typography>\n              </TableCell>\n              <TableCell align=\"center\">{user.winCount}</TableCell>\n              <TableCell align=\"center\">{user.secondCount}</TableCell>\n              <TableCell align=\"center\">{user.fourCount}</TableCell>\n              <TableCell align=\"center\">{user.a1Count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { TournamentListPage } from \"./pages/TournamentListPage\";\nimport { TournamentRankingPage } from \"./pages/TournamentRankingPage\";\nimport { UserHistoryPage } from \"./pages/UserHistoryPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\nimport { RecordPage } from \"./pages/RecordPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/6\"\n                className={classes.link}\n              >\n                第6期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/5\"\n                className={classes.link}\n              >\n                第5期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/4\"\n                className={classes.link}\n              >\n                第4期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/past\"\n                className={classes.link}\n              >\n                過去の開催\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/record\"\n                className={classes.link}\n              >\n                記録\n              </Link>\n              {/*<Link*/}\n              {/*  component={RouterLink}*/}\n              {/*  variant=\"button\"*/}\n              {/*  color=\"textPrimary\"*/}\n              {/*  to=\"/register\"*/}\n              {/*  className={classes.link}*/}\n              {/*>*/}\n              {/*  参加登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/register\">*/}\n            {/*  <RegisterPage />*/}\n            {/*</Route>*/}\n            <Route path=\"/user/:user_id([0-9a-zA-Z_]+)\">\n              <UserHistoryPage />\n            </Route>\n            <Route path=\"/past\">\n              <TournamentListPage />\n            </Route>\n            <Route path=\"/record\">\n              <RecordPage />\n            </Route>\n            <Route path=\"/ranking/:seasonId([0-9]+)\">\n              <TournamentRankingPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}