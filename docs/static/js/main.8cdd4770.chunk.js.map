{"version":3,"sources":["pages/RulePage.tsx","pages/SubmitPage.tsx","components/TournamentBracket/GameNode.tsx","components/TournamentBracket/index.tsx","pages/Tournament.tsx","components/TournamentBracket/TreeMaker.ts","App.tsx","index.tsx"],"names":["RulePage","Container","maxWidth","CssBaseline","Typography","component","variant","align","color","gutterBottom","Link","href","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SubmitPage","classes","useState","userId","setUserId","registerState","setRegisterState","to","className","Avatar","noValidate","onSubmit","e","preventDefault","fetch","method","headers","body","SEASON_ID","then","catch","TextField","required","fullWidth","label","autoFocus","value","onChange","inputValue","target","test","Button","type","disabled","length","GameNode","props","node","children","name","map","i","key","TournamentBracket","root","heroContent","padding","Tournament","atCoderUserIds","setAtCoderUserIds","useEffect","season_id","response","json","players","leafCount","leafPlayers","player1","player2","push","currentPlayers","nextPlayers","node1","node2","makeTree","Grid","container","justify","direction","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","now","Date","AppBar","position","elevation","Toolbar","RouterLink","noWrap","exact","path","render","seasonId","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cdd4770.chunk.js","sourcesContent":["import { Container, CssBaseline, Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const RulePage = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        ABC Tournament ルール\n      </Typography>\n      <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n        <ul>\n          <li>ABC の結果を使ったトーナメント戦です。</li>\n          <li>\n            各試合は 1 対 1 で行われ、AtCoder の ABC\n            級のコンテストでの順位が高かった方が勝者となり、次の試合に進出します。\n          </li>\n          <li>\n            ABC級のコンテストとはレーティング更新対象が 0 - 1999\n            のコンテストです。\n          </li>\n          <li>同順位の場合はレートが高い方を勝者とします。</li>\n          <li>\n            各試合の対象となる ABC は以下のとおりです。\n            <ul>\n              <li>\n                1 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc177\">\n                  AtCoder Beginner Contest 177\n                </Link>\n              </li>\n              <li>2 回戦以降 - AtCoder からアナウンスがあり次第更新します。</li>\n            </ul>\n          </li>\n        </ul>\n      </Typography>\n    </Container>\n  );\n};\n","import {\n  Avatar,\n  Button,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { SEASON_ID } from \"../App\";\nimport { Redirect } from \"react-router-dom\";\n\ntype RegisterState = \"Registered\" | \"Input\" | \"Failed\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const SubmitPage = () => {\n  const classes = useStyles();\n  const [userId, setUserId] = useState(\"\");\n  const [registerState, setRegisterState] = useState<RegisterState>(\"Input\");\n\n  const register = () => {\n    fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      },\n      body: `atcoder_id=${userId}&season_id=${SEASON_ID}`,\n    })\n      .then(() => {\n        setRegisterState(\"Registered\");\n      })\n      .catch(() => {\n        setRegisterState(\"Failed\");\n      });\n  };\n\n  if (registerState === \"Registered\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => {\n            e.preventDefault();\n            register();\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"AtCoder ID\"\n            autoFocus\n            value={userId}\n            onChange={(e) => {\n              const inputValue = e.target.value;\n              if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n                setUserId(inputValue);\n              }\n            }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={userId.length === 0}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { BracketNode } from \"./index\";\n\ninterface Props {\n  node: BracketNode;\n}\n\nexport const GameNode = (props: Props) => {\n  if (props.node.children.length === 0) {\n    return <p>{props.node.name}</p>;\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"item-parent\">\n          <p>{props.node.name}</p>\n        </div>\n        <div className=\"item-children\">\n          {props.node.children.map((node, i) => (\n            <div key={i} className=\"item-child\">\n              <GameNode node={node} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport { GameNode } from \"./GameNode\";\n\nexport interface BracketNode {\n  name: string;\n  children: BracketNode[];\n}\n\ninterface Props {\n  root: BracketNode;\n}\n\nexport const TournamentBracket = (props: Props) => {\n  return (\n    <div className=\"wrapper\">\n      <GameNode node={props.root} />\n    </div>\n  );\n};\n","import { Container, CssBaseline, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { TournamentBracket } from \"../components/TournamentBracket\";\nimport { makeTree } from \"../components/TournamentBracket/TreeMaker\";\nimport \"./tournament.scss\";\n\ninterface Props {\n  season_id: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n}));\n\nexport const Tournament = (props: Props) => {\n  const [atCoderUserIds, setAtCoderUserIds] = useState<string[]>([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetch(\n      `https://atcoder-tournament.herokuapp.com/api/users?season_id=${props.season_id}`\n    )\n      .then((response) => response.json())\n      .then((response) => setAtCoderUserIds(response));\n  }, [props.season_id]);\n\n  const root =\n    atCoderUserIds.length > 0\n      ? makeTree(atCoderUserIds)\n      : { name: \"loading\", children: [] };\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.heroContent}>\n        <Grid container justify=\"center\" direction=\"column\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            AtCoder Beginner Contest Tournament\n          </Typography>\n          <Typography\n            component=\"h4\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            登録締め切り : 2020年8月29日 19:00 JST\n          </Typography>\n          <TournamentBracket root={root} />\n        </Grid>\n      </Container>\n    </>\n  );\n};\n","import { BracketNode } from \"./index\";\n\nexport const makeTree = (players: string[]): BracketNode => {\n  let leafCount = 1;\n  while (leafCount * 2 <= players.length) {\n    leafCount *= 2;\n  }\n\n  let leafPlayers = [] as BracketNode[];\n  for (let i = 0; i < leafCount; i++) {\n    if (leafCount + i < players.length) {\n      const player1 = players[i];\n      const player2 = players[leafCount + i];\n      leafPlayers.push({\n        name: \"...\",\n        children: [\n          { name: player2, children: [] },\n          { name: player1, children: [] },\n        ],\n      });\n    } else {\n      leafPlayers.push({\n        name: players[i],\n        children: [],\n      });\n    }\n  }\n\n  let currentPlayers = leafPlayers;\n\n  while (currentPlayers.length > 1) {\n    const nextPlayers = [];\n    for (let i = 0; i < currentPlayers.length; i += 2) {\n      const node1 = currentPlayers[i];\n      if (i + 1 === currentPlayers.length) {\n        nextPlayers.push({ name: \"...\", children: [node1] });\n      } else {\n        const node2 = currentPlayers[i + 1];\n        nextPlayers.push({ name: \"...\", children: [node1, node2] });\n      }\n    }\n    currentPlayers = nextPlayers;\n  }\n\n  return currentPlayers[0];\n};\n","import {\n  Container,\n  createMuiTheme,\n  MuiThemeProvider,\n  CssBaseline,\n  AppBar,\n  Typography,\n  Link,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { RulePage } from \"./pages/RulePage\";\nimport { SubmitPage } from \"./pages/SubmitPage\";\nimport { Tournament } from \"./pages/Tournament\";\n\nexport const SEASON_ID = 1;\nexport const DEADLINE = 1598695200;\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  const now = Date.now() / 1000;\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              {now < DEADLINE && (\n                <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/submit\"\n                  className={classes.link}\n                >\n                  登録\n                </Link>\n              )}\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/rule\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth=\"lg\">\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament season_id={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/submit\">\n              <SubmitPage />\n            </Route>\n            <Route path=\"/rule\">\n              <RulePage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}