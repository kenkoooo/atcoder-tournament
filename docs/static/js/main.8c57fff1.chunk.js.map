{"version":3,"sources":["pages/RegisterPage/index.tsx","components/RatingName.tsx","utils/Constants.ts","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","utils/API.ts","pages/Tournament.tsx","pages/TournamentListPage.tsx","pages/TournamentRankingPage.tsx","pages/UserHistoryPage.tsx","pages/RecordPage.tsx","App.tsx","index.tsx"],"names":["RegistrationForm","props","classes","useStyles","className","form","noValidate","onSubmit","e","preventDefault","register","state","TextField","variant","margin","required","fullWidth","label","autoFocus","value","userId","onChange","inputValue","target","test","Button","type","color","submit","disabled","length","VerificationForm","code","onClick","confirm","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","RegisterPage","useState","registerState","setRegisterState","getVerificationCode","input","a","fetch","usersResponse","json","users","registered","map","user","toLowerCase","includes","trim","then","response","find","method","headers","body","JSON","stringify","user_id","secret","verification_code","catch","Container","maxWidth","CssBaseline","Avatar","Typography","component","verify","token","CircularProgress","useRatingColorStyle","red","fontWeight","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","c","children","rating","startsWith","Link","RouterLink","to","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","nameContainer","padding","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","Box","justifyContent","item","itemChildren","itemChild","marginBottom","position","content","top","right","transform","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","toFixed","LeagueTable","seasonId","league","Math","max","leage","filter","TableContainer","Table","TableHead","TableBody","idx","promotionRank","colSpan","dropRank","battleResult","j","k","fetchTournamentSeason6","text","usersText","previousBracketsResponse","previousBracketsText","ratingResponse","ratingText","wasm","construct_tournament","parse","useUserHistories","useSWR","url","revalidateOnFocus","revalidateOnReconnect","useTournamentList","SingleWinnerTable","top4","Object","entries","m","AntTab","withStyles","root","selected","Tab","Tournament","useTournament","data","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","Grid","container","justify","direction","noWrap","Tabs","v","centered","promotion_rank","drop_rank","flexGrow","marginRight","caption","link","Winners","winners","ranking","sort","b","slice","Paper","xs","season","expandable","TournamentListPage","tournaments","localeCompare","table","TournamentRankingPage","useParams","class","UserHistoryPage","histories","userHistory","sorted","parseInt","winCount","top_k","secondCount","a1Count","href","topK","klass","final_rank","RecordPage","values","h","fourCount","x","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","textDecoration","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c57fff1.chunk.js","sourcesContent":["import {\n  Avatar,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nconst RegistrationForm = (props: {\n  state: InputState;\n  onChange: (input: InputState) => void;\n  register: (input: InputState) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.register(props.state);\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"AtCoder ID\"\n        autoFocus\n        value={props.state.userId}\n        onChange={(e) => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n            props.onChange({\n              ...props.state,\n              userId: inputValue,\n            });\n          }\n        }}\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        disabled={props.state.userId.length === 0}\n      >\n        登録\n      </Button>\n    </form>\n  );\n};\n\nconst VerificationForm = (props: {\n  state: VerifyState;\n  confirm: () => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>本人確認のため、AtCoder にログインして、所属を一時的に</p>\n      <code>{props.state.code}</code>\n      <p>に変更して、「確認」ボタンを押してください。</p>\n      <Button\n        onClick={props.confirm}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        確認\n      </Button>\n    </>\n  );\n};\n\ninterface InputState {\n  type: \"Input\";\n  userId: string;\n}\ninterface VerifyState {\n  type: \"Verify\";\n  userId: string;\n  secret: string;\n  code: string;\n}\ninterface RegisteredState {\n  type: \"Registered\";\n}\ninterface FailedState {\n  type: \"Failed\";\n}\ninterface PendingState {\n  type: \"Pending\";\n}\ninterface Already {\n  type: \"Already\";\n}\n\ntype RegisterState =\n  | InputState\n  | VerifyState\n  | RegisteredState\n  | FailedState\n  | PendingState\n  | Already;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const RegisterPage = () => {\n  const classes = useStyles();\n  const [registerState, setRegisterState] = useState<RegisterState>({\n    type: \"Input\",\n    userId: \"\",\n  });\n\n  const getVerificationCode = async (input: InputState) => {\n    setRegisterState({ type: \"Pending\" });\n    const usersResponse = await fetch(\n      \"https://atcoder-tournament.herokuapp.com/api/users\"\n    );\n    const users = (await usersResponse.json()) as string[];\n\n    const registered = users\n      .map((user) => user.toLowerCase())\n      .includes(input.userId.trim().toLowerCase());\n    fetch(\"https://atcoder-tournament.herokuapp.com/api/users\")\n      .then((response) => response.json())\n      .then((users) => users as string[])\n      .then((users) =>\n        users.find(\n          (user) => user.toLowerCase() === input.userId.trim().toLowerCase()\n        )\n      );\n    if (registered) {\n      setRegisterState({ type: \"Already\" });\n      return;\n    }\n\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/authorize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: input.userId.trim() }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setRegisterState({\n          type: \"Verify\",\n          userId: input.userId,\n          secret: response.secret,\n          code: response.verification_code,\n        });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n  const confirmRegistration = (verify: VerifyState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/confirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: verify.userId, secret: verify.secret }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        const token = response.token;\n        return fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: `user_id=${verify.userId}&token=${token}`,\n        });\n      })\n      .then(() => {\n        setRegisterState({ type: \"Registered\" });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          第6期\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          ABCトーナメント参加登録\n        </Typography>\n        {/*<Typography component=\"h3\" variant=\"h6\">*/}\n        {/*  2021-07-24(土) 20:30〆切*/}\n        {/*</Typography>*/}\n        {registerState.type === \"Input\" && (\n          <RegistrationForm\n            state={registerState}\n            onChange={setRegisterState}\n            register={getVerificationCode}\n          />\n        )}\n        {registerState.type === \"Verify\" && (\n          <VerificationForm\n            state={registerState}\n            confirm={() => confirmRegistration(registerState)}\n          />\n        )}\n        {registerState.type === \"Already\" && (\n          <>\n            <p>既に登録済みです。</p>\n          </>\n        )}\n        {registerState.type === \"Failed\" && (\n          <>\n            <p>登録に失敗しました。本人確認に失敗したか、既に登録済みです。</p>\n          </>\n        )}\n        {registerState.type === \"Registered\" && <p>登録完了しました。</p>}\n        {registerState.type === \"Pending\" && <CircularProgress />}\n      </div>\n    </Container>\n  );\n};\n","import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { DUMMY_USER_ID_PREFIX } from \"../utils/Constants\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[600],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[600],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[400],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[500],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (userId.startsWith(DUMMY_USER_ID_PREFIX)) {\n    return <>-</>;\n  }\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  return (\n    <Link className={c} component={RouterLink} to={`/user/${userId}`}>\n      {userId}\n    </Link>\n  );\n};\n","export const SEASON_ID = 5;\nexport const DUMMY_USER_ID_PREFIX = \"---non-existing-user\";\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\nimport { DUMMY_USER_ID_PREFIX } from \"../../utils/Constants\";\n\nconst isUsingRankSum = (seasonId: string) => [\"2\", \"3\", \"4\"].includes(seasonId);\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum.toFixed(2)}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  seasonId: string;\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n  const leage = props.league.filter(\n    (entry) => !entry.user.user_id.startsWith(DUMMY_USER_ID_PREFIX)\n  );\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">\n              {isUsingRankSum(props.seasonId) ? \"順位合計\" : \"順位調和平均\"}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leage.map((entry, idx) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={idx}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={idx}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={idx}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import useSWR from \"swr\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { UserHistory } from \"../models/UserHistory\";\n\nconst fetchTournamentSeason6 = async (): Promise<TournamentResponse> => {\n  const usersResponse = await fetch(\n    \"https://atcoder-tournament.herokuapp.com/api/users\"\n  );\n  const usersText = await usersResponse.text();\n\n  const previousBracketsResponse = await fetch(\"./bracket-5.json\");\n  const previousBracketsText = await previousBracketsResponse.text();\n\n  const ratingResponse = await fetch(\"./ratings.json\");\n  const ratingText = await ratingResponse.text();\n\n  const wasm = await import(\"../wasm/build\");\n\n  const result = wasm.construct_tournament(\n    usersText,\n    ratingText,\n    previousBracketsText\n  );\n  return JSON.parse(result);\n};\n\nexport const useTournament = (seasonId: string) => {\n  const fetcher = (url: string) => {\n    if (seasonId === \"6\") {\n      return fetchTournamentSeason6();\n    } else {\n      return fetch(url)\n        .then((response) => response.json())\n        .then((response) => response as TournamentResponse);\n    }\n  };\n  const url = `./bracket-${seasonId}.json`;\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useUserHistories = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as UserHistory[]);\n  };\n\n  const url = \"./histories.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useTournamentList = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as TournamentHistory[]);\n  };\n\n  const url = \"./tournaments.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { User } from \"../models/TournamentNode\";\nimport { useTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const tournament = useTournament(props.seasonId).data;\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n\n  const keys = Object.keys(tournament ?? {});\n  const bracket =\n    keys[selectedDivision] && tournament\n      ? tournament[keys[selectedDivision]]\n      : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {tournament ? (\n          <>\n            {keys[selectedDivision] && (\n              <SingleWinnerTable\n                top4={tournament[keys[selectedDivision]].top4}\n              />\n            )}\n            <Button onClick={() => setShowTop16(!showTop16)}>\n              {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n            </Button>\n            <Box display=\"flex\" justifyContent=\"center\">\n              {node && (\n                <GameNode\n                  tournament={node}\n                  depth={0}\n                  config={{ depthLimit, defendingChampion }}\n                />\n              )}\n            </Box>\n            {league && league.length > 0 && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n                  順位決定リーグ\n                </Typography>\n                <LeagueTable\n                  seasonId={props.seasonId}\n                  league={league}\n                  promotionRank={bracket?.promotion_rank}\n                  dropRank={bracket?.drop_rank}\n                />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { useTournamentList } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  caption: {\n    marginRight: 20,\n    minWidth: 80,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nconst Winners = (e: TournamentHistory) => {\n  const classes = useStyles();\n  const winners = e.ranking\n    .map(([rank, entry]) => ({\n      rank: rank + 1,\n      userId: entry.user_id,\n    }))\n    .sort((a, b) => a.rank - b.rank)\n    .slice(0, 4);\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Typography variant=\"h3\">\n            <Link\n              component={RouterLink}\n              to={`/tournament/${e.season}`}\n              className={classes.link}\n            >\n              第{e.season}期\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6} direction=\"column\" spacing={2}>\n          {winners.map((winner) => {\n            if (winner.rank === 1) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h4\">\n                    優勝\n                  </Typography>\n                  <Typography variant=\"h2\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else if (winner.rank === 2) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    準優勝\n                  </Typography>\n                  <Typography variant=\"h4\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    第{winner.rank}位\n                  </Typography>\n                  <Typography variant=\"h5\">{winner.userId}</Typography>\n                </Box>\n              );\n            }\n          })}\n          {e.expandable && (\n            <Box marginTop={2}>\n              <Link\n                className={classes.link}\n                component={RouterLink}\n                to={`/ranking/${e.season}`}\n              >\n                全てのランキングを表示\n              </Link>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport const TournamentListPage = () => {\n  const classes = useStyles();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  tournaments.sort((a, b) => b.season.localeCompare(a.season));\n\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h2\">過去の開催</Typography>\n      <Container>\n        {tournaments.map((e) => (\n          <Winners key={e.season} {...e} />\n        ))}\n      </Container>\n    </Container>\n  );\n};\n","import {\n  Box,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport React from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useTournamentList } from \"../utils/API\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n  table: {\n    maxWidth: 800,\n  },\n}));\nexport const TournamentRankingPage = () => {\n  const classes = useStyles();\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const ranking = tournaments.find(\n    (tournament) => tournament.season === seasonId && tournament.expandable\n  )?.ranking;\n  if (!ranking) {\n    return <p>not found</p>;\n  }\n  ranking.sort((a, b) => a[0] - b[0]);\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <TableContainer className={classes.table}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>総合順位</TableCell>\n              <TableCell>クラス</TableCell>\n              <TableCell>クラス内順位</TableCell>\n              <TableCell>ユーザー名</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ranking.map(([rank, entry]) => (\n              <TableRow key={rank}>\n                <TableCell>{rank + 1}</TableCell>\n                <TableCell>{entry.class}</TableCell>\n                <TableCell>{entry.rank}</TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\">\n                    <Link\n                      className={classes.link}\n                      component={RouterLink}\n                      to={`/user/${entry.user_id}`}\n                    >\n                      {entry.user_id}\n                    </Link>\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst formatTopK = (season: number, topK: number, klass: string) => {\n  if (topK === 1) {\n    if (klass === \"A\" || klass === \"A1\") {\n      return `第${season}期王者`;\n    } else {\n      return \"優勝\";\n    }\n  } else if (topK === 2) {\n    return \"準優勝\";\n  } else {\n    return `ベスト${topK}`;\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nexport const UserHistoryPage = () => {\n  const classes = useStyles();\n  const { user_id } = useParams<{ user_id: string }>();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const userHistory =\n    histories.find((e) => e.user_id === user_id)?.histories ?? {};\n  const sorted = Object.entries(userHistory)\n    .map(([season, result]) => ({\n      season: parseInt(season),\n      result,\n    }))\n    .sort((a, b) => b.season - a.season);\n\n  const winCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 1).length;\n  const secondCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 2).length;\n  const a1Count = sorted.filter((e) => e.result.class === \"A1\").length;\n\n  return (\n    <Container className={classes.root}>\n      <Grid container>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <Link\n              className={classes.link}\n              href={`https://atcoder.jp/users/${user_id}`}\n            >\n              {user_id}\n            </Link>\n          </Typography>\n          {winCount > 0 && (\n            <Typography variant=\"h6\">優勝{winCount}回</Typography>\n          )}\n          {secondCount > 0 && (\n            <Typography variant=\"h6\">準優勝{secondCount}回</Typography>\n          )}\n          {a1Count > 0 && (\n            <Typography variant=\"h6\">A1在籍{a1Count}期</Typography>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          {sorted.map((e) => (\n            <Paper key={e.season} className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\">\n                    <Link\n                      component={RouterLink}\n                      to={`/tournament/${e.season}`}\n                      className={classes.link}\n                    >\n                      第{e.season}期 {e.result.class}クラス\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item xs={4} direction=\"column\">\n                  <Typography variant=\"body1\">トーナメント</Typography>\n                  <Typography variant=\"h4\">\n                    {formatTopK(e.season, e.result.top_k, e.result.class)}\n                  </Typography>\n                </Grid>\n                {e.result.final_rank && (\n                  <Grid item xs direction=\"column\">\n                    <Typography variant=\"body1\">最終順位</Typography>\n                    <Typography variant=\"h4\">\n                      {e.result.final_rank}位\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          ))}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n}));\nexport const RecordPage = () => {\n  const classes = useStyles();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const users = histories\n    .map((e) => {\n      const userId = e.user_id;\n      const histories = Object.values(e.histories).filter(\n        (h) => h.class === \"A1\" || h.class === \"A\"\n      );\n      const winCount = histories.filter((h) => h.top_k === 1).length;\n      const secondCount = histories.filter((h) => h.top_k === 2).length;\n      const fourCount = histories.filter((h) => h.top_k === 4).length;\n      const a1Count = histories.filter((h) => h.class === \"A1\").length;\n      return {\n        a1Count,\n        winCount,\n        secondCount,\n        fourCount,\n        userId,\n      };\n    })\n    .filter((x) => x.a1Count + x.winCount + x.secondCount + x.fourCount > 0);\n  users.sort((a, b) => {\n    if (a.winCount !== b.winCount) {\n      return b.winCount - a.winCount;\n    }\n    if (a.secondCount !== b.secondCount) {\n      return b.secondCount - a.secondCount;\n    }\n    if (a.fourCount !== b.fourCount) {\n      return b.fourCount - a.fourCount;\n    }\n    if (a.a1Count !== b.a1Count) {\n      return b.a1Count - a.a1Count;\n    }\n    return a.userId.localeCompare(b.userId);\n  });\n\n  return (\n    <Container>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"head\">ユーザー</TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              準優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              ベスト4\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              A1在籍\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.userId}>\n              <TableCell variant=\"head\">\n                <Typography variant=\"h6\">\n                  <Link\n                    className={classes.link}\n                    component={RouterLink}\n                    to={`/user/${user.userId}`}\n                  >\n                    {user.userId}\n                  </Link>\n                </Typography>\n              </TableCell>\n              <TableCell align=\"center\">{user.winCount}</TableCell>\n              <TableCell align=\"center\">{user.secondCount}</TableCell>\n              <TableCell align=\"center\">{user.fourCount}</TableCell>\n              <TableCell align=\"center\">{user.a1Count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { TournamentListPage } from \"./pages/TournamentListPage\";\nimport { TournamentRankingPage } from \"./pages/TournamentRankingPage\";\nimport { UserHistoryPage } from \"./pages/UserHistoryPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\nimport { RecordPage } from \"./pages/RecordPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/5\"\n                className={classes.link}\n              >\n                第5期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/4\"\n                className={classes.link}\n              >\n                第4期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/3\"\n                className={classes.link}\n              >\n                第3期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/past\"\n                className={classes.link}\n              >\n                過去の開催\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/record\"\n                className={classes.link}\n              >\n                記録\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/register\"\n                className={classes.link}\n              >\n                参加登録\n              </Link>\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/user/:user_id([0-9a-zA-Z_]+)\">\n              <UserHistoryPage />\n            </Route>\n            <Route path=\"/past\">\n              <TournamentListPage />\n            </Route>\n            <Route path=\"/record\">\n              <RecordPage />\n            </Route>\n            <Route path=\"/ranking/:seasonId([0-9]+)\">\n              <TournamentRankingPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}