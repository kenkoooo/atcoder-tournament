{"version":3,"sources":["components/RatingName.tsx","utils/Constants.ts","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","utils/API.ts","pages/Tournament.tsx","pages/TournamentListPage.tsx","pages/TournamentRankingPage.tsx","pages/UserHistoryPage.tsx","pages/RecordPage.tsx","App.tsx","index.tsx"],"names":["useRatingColorStyle","makeStyles","red","fontWeight","color","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","userId","children","rating","startsWith","Link","className","component","RouterLink","to","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","backgroundColor","nameContainer","padding","margin","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","CHAMPIONS","heno239","Tiramister","SSRS","WinnerTooltip","defendingChampion","Tooltip","title","role","aria-label","pastWonRounds","filter","pastSeasonId","seasonId","length","label","map","round","join","RankedRatingName","user","rank","useParams","nameElement","user_id","Box","display","justifyContent","alignItems","item","flexDirection","itemChildren","itemChild","marginTop","marginBottom","position","content","top","right","transform","width","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","e","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","toFixed","LeagueTable","league","Math","max","leage","TableContainer","Table","TableHead","includes","TableBody","idx","promotionRank","colSpan","dropRank","battleResult","j","k","fetchTournamentSeason6","a","fetch","usersResponse","text","usersText","previousBracketsResponse","previousBracketsText","ratingResponse","ratingText","wasm","construct_tournament","JSON","parse","useUserHistories","useSWR","url","then","response","json","revalidateOnFocus","revalidateOnReconnect","useTournamentList","SingleWinnerTable","top4","Container","Object","entries","users","variant","m","Typography","AntTab","withStyles","root","selected","Tab","Tournament","useTournament","data","useState","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","CssBaseline","Grid","container","justify","direction","noWrap","Tabs","value","onChange","v","centered","Button","onClick","promotion_rank","drop_rank","CircularProgress","useStyles","theme","flexGrow","maxWidth","paper","spacing","marginRight","caption","link","Winners","winners","ranking","sort","b","slice","Paper","xs","season","expandable","TournamentListPage","tournaments","localeCompare","table","TournamentRankingPage","find","class","UserHistoryPage","histories","userHistory","sorted","parseInt","winCount","top_k","secondCount","a1Count","href","topK","klass","final_rank","RecordPage","values","h","fourCount","x","createMuiTheme","palette","type","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","textDecoration","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","target","rel","exact","path","render","match","params","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d318c7a.chunk.js","sourcesContent":["import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { DUMMY_USER_ID_PREFIX } from \"../utils/Constants\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[400],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[400],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[300],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[400],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (userId.startsWith(DUMMY_USER_ID_PREFIX)) {\n    return <>-</>;\n  }\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  return (\n    <Link className={c} component={RouterLink} to={`/user/${userId}`}>\n      {userId}\n    </Link>\n  );\n};\n","export const SEASON_ID = 6;\nexport const DUMMY_USER_ID_PREFIX = \"---non-existing-user\";\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { grey, orange } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: grey[800],\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? orange[500] : grey[400],\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nconst CHAMPIONS: { [key: string]: string[] } = {\n  heno239: [\"1\", \"2\", \"5\"],\n  Tiramister: [\"3\"],\n  SSRS: [\"4\"],\n};\n\nconst WinnerTooltip = (props: {\n  defendingChampion: boolean | undefined;\n  userId: string;\n  seasonId: string;\n}) => {\n  if (props.defendingChampion) {\n    return (\n      <Tooltip title=\"前期王者\">\n        <span role=\"img\" aria-label=\"king\">\n          &#x1F451;{\" \"}\n        </span>\n      </Tooltip>\n    );\n  }\n\n  const pastWonRounds = (CHAMPIONS[props.userId] ?? []).filter(\n    (pastSeasonId) => pastSeasonId < props.seasonId\n  );\n  if (pastWonRounds.length > 0) {\n    const label = pastWonRounds.map((round) => `第${round}期`).join(\", \");\n    return (\n      <Tooltip title={`${label}王者`}>\n        <span role=\"img\" aria-label=\"king\">\n          &#x1F3C5;{\" \"}\n        </span>\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      <WinnerTooltip\n        defendingChampion={props.defendingChampion}\n        userId={user.user_id}\n        seasonId={seasonId}\n      />\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\nimport { DUMMY_USER_ID_PREFIX } from \"../../utils/Constants\";\n\nconst isUsingRankSum = (seasonId: string) => [\"2\", \"3\", \"4\"].includes(seasonId);\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum.toFixed(2)}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  seasonId: string;\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n  const leage = props.league.filter(\n    (entry) => !entry.user.user_id.startsWith(DUMMY_USER_ID_PREFIX)\n  );\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">\n              {isUsingRankSum(props.seasonId) ? \"順位合計\" : \"順位調和平均\"}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leage.map((entry, idx) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={idx}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={idx}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={idx}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import useSWR from \"swr\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { UserHistory } from \"../models/UserHistory\";\n\nconst fetchTournamentSeason6 = async (): Promise<TournamentResponse> => {\n  const usersResponse = await fetch(\n    \"https://atcoder-tournament.herokuapp.com/api/users\"\n  );\n  const usersText = await usersResponse.text();\n\n  const previousBracketsResponse = await fetch(\"./bracket-5.json\");\n  const previousBracketsText = await previousBracketsResponse.text();\n\n  const ratingResponse = await fetch(\"./ratings.json\");\n  const ratingText = await ratingResponse.text();\n\n  const wasm = await import(\"../wasm/build\");\n\n  const result = wasm.construct_tournament(\n    usersText,\n    ratingText,\n    previousBracketsText\n  );\n  return JSON.parse(result);\n};\n\nexport const useTournament = (seasonId: string) => {\n  const fetcher = (url: string) => {\n    if (seasonId === \"x\") {\n      return fetchTournamentSeason6();\n    } else {\n      return fetch(url)\n        .then((response) => response.json())\n        .then((response) => response as TournamentResponse);\n    }\n  };\n  const url = `./bracket-${seasonId}.json`;\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useUserHistories = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as UserHistory[]);\n  };\n\n  const url = \"./histories.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useTournamentList = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as TournamentHistory[]);\n  };\n\n  const url = \"./tournaments.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { User } from \"../models/TournamentNode\";\nimport { useTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const tournament = useTournament(props.seasonId).data;\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n\n  const keys = Object.keys(tournament ?? {});\n  const bracket =\n    keys[selectedDivision] && tournament\n      ? tournament[keys[selectedDivision]]\n      : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {tournament ? (\n          <>\n            {keys[selectedDivision] && (\n              <SingleWinnerTable\n                top4={tournament[keys[selectedDivision]].top4}\n              />\n            )}\n            <Button onClick={() => setShowTop16(!showTop16)}>\n              {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n            </Button>\n            <Box display=\"flex\" justifyContent=\"center\">\n              {node && (\n                <GameNode\n                  tournament={node}\n                  depth={0}\n                  config={{ depthLimit, defendingChampion }}\n                />\n              )}\n            </Box>\n            {league && league.length > 0 && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n                  順位決定リーグ\n                </Typography>\n                <LeagueTable\n                  seasonId={props.seasonId}\n                  league={league}\n                  promotionRank={bracket?.promotion_rank}\n                  dropRank={bracket?.drop_rank}\n                />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { useTournamentList } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  caption: {\n    marginRight: 20,\n    minWidth: 80,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nconst Winners = (e: TournamentHistory) => {\n  const classes = useStyles();\n  const winners = e.ranking\n    .map(([rank, entry]) => ({\n      rank: rank + 1,\n      userId: entry.user_id,\n    }))\n    .sort((a, b) => a.rank - b.rank)\n    .slice(0, 4);\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Typography variant=\"h3\">\n            <Link\n              component={RouterLink}\n              to={`/tournament/${e.season}`}\n              className={classes.link}\n            >\n              第{e.season}期\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6} direction=\"column\" spacing={2} container>\n          {winners.map((winner) => {\n            if (winner.rank === 1) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\" key={winner.userId}>\n                  <Typography className={classes.caption} variant=\"h4\">\n                    優勝\n                  </Typography>\n                  <Typography variant=\"h2\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else if (winner.rank === 2) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\" key={winner.userId}>\n                  <Typography className={classes.caption} variant=\"h6\">\n                    準優勝\n                  </Typography>\n                  <Typography variant=\"h4\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box display=\"flex\" alignItems=\"center\" key={winner.userId}>\n                  <Typography className={classes.caption} variant=\"h6\">\n                    第{winner.rank}位\n                  </Typography>\n                  <Typography variant=\"h5\">{winner.userId}</Typography>\n                </Box>\n              );\n            }\n          })}\n          {e.expandable && (\n            <Box marginTop={2}>\n              <Link\n                className={classes.link}\n                component={RouterLink}\n                to={`/ranking/${e.season}`}\n              >\n                全てのランキングを表示\n              </Link>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport const TournamentListPage = () => {\n  const classes = useStyles();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  tournaments.sort((a, b) => b.season.localeCompare(a.season));\n\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h2\">過去の開催</Typography>\n      <Container>\n        {tournaments.map((e) => (\n          <Winners key={e.season} {...e} />\n        ))}\n      </Container>\n    </Container>\n  );\n};\n","import {\n  Box,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport React from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useTournamentList } from \"../utils/API\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n  table: {\n    maxWidth: 800,\n  },\n}));\nexport const TournamentRankingPage = () => {\n  const classes = useStyles();\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const ranking = tournaments.find(\n    (tournament) => tournament.season === seasonId && tournament.expandable\n  )?.ranking;\n  if (!ranking) {\n    return <p>not found</p>;\n  }\n  ranking.sort((a, b) => a[0] - b[0]);\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <TableContainer className={classes.table}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>総合順位</TableCell>\n              <TableCell>クラス</TableCell>\n              <TableCell>クラス内順位</TableCell>\n              <TableCell>ユーザー名</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ranking.map(([rank, entry]) => (\n              <TableRow key={rank}>\n                <TableCell>{rank + 1}</TableCell>\n                <TableCell>{entry.class}</TableCell>\n                <TableCell>{entry.rank}</TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\">\n                    <Link\n                      className={classes.link}\n                      component={RouterLink}\n                      to={`/user/${entry.user_id}`}\n                    >\n                      {entry.user_id}\n                    </Link>\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst formatTopK = (season: number, topK: number, klass: string) => {\n  if (topK === 1) {\n    if (klass === \"A\" || klass === \"A1\") {\n      return `第${season}期王者`;\n    } else {\n      return \"優勝\";\n    }\n  } else if (topK === 2) {\n    return \"準優勝\";\n  } else {\n    return `ベスト${topK}`;\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nexport const UserHistoryPage = () => {\n  const classes = useStyles();\n  const { user_id } = useParams<{ user_id: string }>();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const userHistory =\n    histories.find((e) => e.user_id === user_id)?.histories ?? {};\n  const sorted = Object.entries(userHistory)\n    .map(([season, result]) => ({\n      season: parseInt(season),\n      result,\n    }))\n    .sort((a, b) => b.season - a.season);\n\n  const winCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 1).length;\n  const secondCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 2).length;\n  const a1Count = sorted.filter((e) => e.result.class === \"A1\").length;\n\n  return (\n    <Container className={classes.root}>\n      <Grid container>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <Link\n              className={classes.link}\n              href={`https://atcoder.jp/users/${user_id}`}\n            >\n              {user_id}\n            </Link>\n          </Typography>\n          {winCount > 0 && (\n            <Typography variant=\"h6\">優勝{winCount}回</Typography>\n          )}\n          {secondCount > 0 && (\n            <Typography variant=\"h6\">準優勝{secondCount}回</Typography>\n          )}\n          {a1Count > 0 && (\n            <Typography variant=\"h6\">A1在籍{a1Count}期</Typography>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          {sorted.map((e) => (\n            <Paper key={e.season} className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\">\n                    <Link\n                      component={RouterLink}\n                      to={`/tournament/${e.season}`}\n                      className={classes.link}\n                    >\n                      第{e.season}期 {e.result.class}クラス\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item xs={4} direction=\"column\">\n                  <Typography variant=\"body1\">トーナメント</Typography>\n                  <Typography variant=\"h4\">\n                    {formatTopK(e.season, e.result.top_k, e.result.class)}\n                  </Typography>\n                </Grid>\n                {e.result.final_rank && (\n                  <Grid item xs direction=\"column\">\n                    <Typography variant=\"body1\">最終順位</Typography>\n                    <Typography variant=\"h4\">\n                      {e.result.final_rank}位\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          ))}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n}));\nexport const RecordPage = () => {\n  const classes = useStyles();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const users = histories\n    .map((e) => {\n      const userId = e.user_id;\n      const histories = Object.values(e.histories).filter(\n        (h) => h.class === \"A1\" || h.class === \"A\"\n      );\n      const winCount = histories.filter((h) => h.top_k === 1).length;\n      const secondCount = histories.filter((h) => h.top_k === 2).length;\n      const fourCount = histories.filter((h) => h.top_k === 4).length;\n      const a1Count = histories.filter((h) => h.class === \"A1\").length;\n      return {\n        a1Count,\n        winCount,\n        secondCount,\n        fourCount,\n        userId,\n      };\n    })\n    .filter((x) => x.a1Count + x.winCount + x.secondCount + x.fourCount > 0);\n  users.sort((a, b) => {\n    if (a.winCount !== b.winCount) {\n      return b.winCount - a.winCount;\n    }\n    if (a.secondCount !== b.secondCount) {\n      return b.secondCount - a.secondCount;\n    }\n    if (a.fourCount !== b.fourCount) {\n      return b.fourCount - a.fourCount;\n    }\n    if (a.a1Count !== b.a1Count) {\n      return b.a1Count - a.a1Count;\n    }\n    return a.userId.localeCompare(b.userId);\n  });\n\n  return (\n    <Container>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"head\">ユーザー</TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              準優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              ベスト4\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              A1在籍\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.userId}>\n              <TableCell variant=\"head\">\n                <Typography variant=\"h6\">\n                  <Link\n                    className={classes.link}\n                    component={RouterLink}\n                    to={`/user/${user.userId}`}\n                  >\n                    {user.userId}\n                  </Link>\n                </Typography>\n              </TableCell>\n              <TableCell align=\"center\">{user.winCount}</TableCell>\n              <TableCell align=\"center\">{user.secondCount}</TableCell>\n              <TableCell align=\"center\">{user.fourCount}</TableCell>\n              <TableCell align=\"center\">{user.a1Count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { TournamentListPage } from \"./pages/TournamentListPage\";\nimport { TournamentRankingPage } from \"./pages/TournamentRankingPage\";\nimport { UserHistoryPage } from \"./pages/UserHistoryPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\nimport { RecordPage } from \"./pages/RecordPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/6\"\n                className={classes.link}\n              >\n                第6期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/5\"\n                className={classes.link}\n              >\n                第5期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/4\"\n                className={classes.link}\n              >\n                第4期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/past\"\n                className={classes.link}\n              >\n                過去の開催\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/record\"\n                className={classes.link}\n              >\n                記録\n              </Link>\n              {/*<Link*/}\n              {/*  component={RouterLink}*/}\n              {/*  variant=\"button\"*/}\n              {/*  color=\"textPrimary\"*/}\n              {/*  to=\"/register\"*/}\n              {/*  className={classes.link}*/}\n              {/*>*/}\n              {/*  参加登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:seasonId([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.seasonId;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/register\">*/}\n            {/*  <RegisterPage />*/}\n            {/*</Route>*/}\n            <Route path=\"/user/:user_id([0-9a-zA-Z_]+)\">\n              <UserHistoryPage />\n            </Route>\n            <Route path=\"/past\">\n              <TournamentListPage />\n            </Route>\n            <Route path=\"/record\">\n              <RecordPage />\n            </Route>\n            <Route path=\"/ranking/:seasonId([0-9]+)\">\n              <TournamentRankingPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}