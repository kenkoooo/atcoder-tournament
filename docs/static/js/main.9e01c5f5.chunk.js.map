{"version":3,"sources":["pages/RulePage.tsx","components/TournamentBracket/GameNode.tsx","pages/Tournament.tsx","utils/API.ts","App.tsx","utils/Constants.ts","index.tsx"],"names":["RulePage","Container","maxWidth","CssBaseline","Typography","component","variant","align","color","gutterBottom","Link","href","useStyle","makeStyles","red","orange","yellow","blue","lightBlue","green","brown","grey","nodeText","padding","margin","backgroundColor","textShadow","fontSize","fontFamily","borderWidth","borderRadius","minWidth","textAlign","rankBadge","marginLeft","RatingName","props","c","classes","userId","children","rating","screenUserId","length","slice","className","RankedRatingName","user","rank","Box","display","justifyContent","user_id","alignItems","GameNode","tournament","map","child","i","key","Tournament","useState","setTournament","selectedDivision","setSelectedDivision","keys","Object","useEffect","seasonId","fetch","then","response","json","Grid","container","justify","direction","Tabs","value","onChange","e","v","centered","Tab","label","theme","createMuiTheme","palette","type","useStyles","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","spacing","heroContent","cardHeader","cardPricing","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","position","elevation","Toolbar","RouterLink","noWrap","to","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e01c5f5.chunk.js","sourcesContent":["import { Container, CssBaseline, Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const RulePage = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        ABC Tournament ルール\n      </Typography>\n      <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n        <ul>\n          <li>ABC級コンテストの結果を使ったトーナメント戦です。</li>\n          <li>\n            各試合は 1 対 1 で行われ、AtCoder の ABC\n            級のコンテストでの順位が高かった方が勝者となり、次の試合に進出します。\n          </li>\n          <li>\n            ABC級のコンテストとはレーティング更新対象が 0 - 1999\n            のコンテストです。\n          </li>\n          <li>\n            ABC級のコンテストのうち、企業がスポンサードしているものについては対象とはなりません。\n          </li>\n          <li>\n            同順位の場合は2020年8月29日 19:00\n            JST時点でのレートが高い方を勝者とします。\n          </li>\n          <li>\n            コンテストにおいて以下に該当するユーザーは\n            (コンテストで正の点数を取った人数 + 1) 位となります。\n            <ul>\n              <li>コンテストに参加登録していないユーザー</li>\n              <li>コンテストに参加登録したが1回も提出していないユーザー</li>\n              <li>\n                コンテストに参加登録し、1回以上提出したが点数が得られなかったユーザー\n              </li>\n            </ul>\n          </li>\n          <li>\n            各試合の対象となる ABC は以下のとおりです。\n            <ul>\n              <li>\n                1 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc177\">\n                  AtCoder Beginner Contest 177\n                </Link>\n              </li>\n              <li>\n                2 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc178\">\n                  AtCoder Beginner Contest 178\n                </Link>\n              </li>\n              <li>\n                3 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc179\">\n                  AtCoder Beginner Contest 179\n                </Link>\n              </li>\n              <li>\n                4 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abl\">\n                  ACL Beginner Contest\n                </Link>\n              </li>\n              <li>準決勝以降 - AtCoder からアナウンスがあり次第更新します。</li>\n            </ul>\n          </li>\n        </ul>\n      </Typography>\n    </Container>\n  );\n};\n","import { Box, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  red,\n  orange,\n  yellow,\n  blue,\n  lightBlue,\n  green,\n  brown,\n  grey,\n} from \"@material-ui/core/colors\";\nimport \"./tournament.scss\";\nimport { TournamentNode, User } from \"../../models/TournamentNode\";\n\nconst useStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[800],\n  },\n  lightBlue: {\n    color: lightBlue[300],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    backgroundColor: \"#7a7b7d\",\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontSize: \"14px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    minWidth: \"120px\",\n    textAlign: \"center\",\n  },\n  rankBadge: {\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n  },\n}));\n\nconst RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n\nconst RankedRatingName = (props: {\n  user: User | null;\n  rank: number | null;\n}) => {\n  const { user, rank } = props;\n  const classes = useStyle();\n\n  if (!user) {\n    return (\n      <div className={classes.nodeText}>\n        <p>...</p>\n      </div>\n    );\n  }\n  if (!rank) {\n    return (\n      <div className={classes.nodeText}>\n        <RatingName rating={user.rating}>{user.user_id}</RatingName>\n      </div>\n    );\n  }\n\n  if (rank > 100000) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeText}>\n        <div>\n          <RatingName rating={user.rating}>{user.user_id}</RatingName>\n        </div>\n        <Box display=\"flex\" alignItems=\"center\" className={classes.rankBadge}>\n          -\n        </Box>\n      </Box>\n    );\n  }\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeText}>\n      <div>\n        <RatingName rating={user.rating}>{user.user_id}</RatingName>\n      </div>\n      <Box display=\"flex\" alignItems=\"center\" className={classes.rankBadge}>\n        {rank}\n      </Box>\n    </Box>\n  );\n};\n\ninterface Props {\n  tournament: TournamentNode;\n}\n\nexport const GameNode = (props: Props) => {\n  if (props.tournament.children.length === 0) {\n    return (\n      <RankedRatingName\n        user={props.tournament.user}\n        rank={props.tournament.rank}\n      />\n    );\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"item-parent\">\n          <RankedRatingName\n            user={props.tournament.user}\n            rank={props.tournament.rank}\n          />\n        </div>\n        <div className=\"item-children\">\n          {props.tournament.children.map((child, i) => (\n            <div key={i} className=\"item-child\">\n              <GameNode tournament={child} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { GameNode } from \"../components/TournamentBracket/GameNode\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const keys = Object.keys(tournament);\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Typography\n          component=\"h4\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          シーズン 1\n        </Typography>\n        <Tabs\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <Tab label={`CLASS ${key}`} key={i} />\n          ))}\n        </Tabs>\n\n        <Box display=\"flex\" justifyContent=\"center\">\n          {keys[selectedDivision] && (\n            <GameNode tournament={tournament[keys[selectedDivision]]} />\n          )}\n        </Box>\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) =>\n  fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { RulePage } from \"./pages/RulePage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              {/*<Link*/}\n              {/*    component={RouterLink}*/}\n              {/*    variant=\"button\"*/}\n              {/*    color=\"textPrimary\"*/}\n              {/*    to=\"/submit\"*/}\n              {/*    className={classes.link}*/}\n              {/*>*/}\n              {/*  登録*/}\n              {/*</Link>*/}\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/rule\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/submit\">*/}\n            {/*  <SubmitPage />*/}\n            {/*</Route>*/}\n            <Route path=\"/rule\">\n              <RulePage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 1;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}