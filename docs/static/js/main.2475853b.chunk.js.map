{"version":3,"sources":["pages/RegisterPage.tsx","components/RatingName.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","pages/Tournament.tsx","utils/API.ts","App.tsx","utils/Constants.ts","index.tsx"],"names":["RegistrationForm","props","classes","useStyles","className","form","noValidate","onSubmit","e","preventDefault","register","state","TextField","variant","margin","required","fullWidth","label","autoFocus","value","userId","onChange","inputValue","target","test","setState","Button","type","color","submit","disabled","length","VerificationForm","code","onClick","confirm","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","RegisterPage","useState","registerState","setRegisterState","Container","maxWidth","CssBaseline","Avatar","Typography","component","input","fetch","method","headers","body","JSON","stringify","user_id","then","response","json","secret","verification_code","catch","verify","token","CircularProgress","useRatingColorStyle","red","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","c","children","rating","screenUserId","slice","Link","href","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","nameContainer","padding","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","Box","justifyContent","item","itemChildren","itemChild","marginBottom","position","content","top","right","transform","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","map","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","LeagueTable","league","Math","max","TableContainer","Table","TableHead","TableBody","promotionRank","colSpan","dropRank","battleResult","j","k","SingleWinnerTable","users","m","AntTab","withStyles","root","selected","Tab","Tournament","setTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","Object","bracket","node","defending_champion","useEffect","seasonId","Grid","container","justify","direction","noWrap","Tabs","v","centered","top4","promotion_rank","drop_rank","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","RouterLink","to","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2475853b.chunk.js","sourcesContent":["import {\n  Avatar,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nconst RegistrationForm = (props: {\n  state: InputState;\n  setState: (input: InputState) => void;\n  register: (input: InputState) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.register(props.state);\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"AtCoder ID\"\n        autoFocus\n        value={props.state.userId}\n        onChange={(e) => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n            props.setState({\n              ...props.state,\n              userId: inputValue,\n            });\n          }\n        }}\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        disabled={props.state.userId.length === 0}\n      >\n        登録\n      </Button>\n    </form>\n  );\n};\n\nconst VerificationForm = (props: {\n  state: VerifyState;\n  confirm: () => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>本人確認のため、AtCoder にログインして、所属を一時的に</p>\n      <code>{props.state.code}</code>\n      <p>に変更して、「確認」ボタンを押してください。</p>\n      <Button\n        onClick={props.confirm}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        確認\n      </Button>\n    </>\n  );\n};\n\ninterface InputState {\n  type: \"Input\";\n  userId: string;\n}\ninterface VerifyState {\n  type: \"Verify\";\n  userId: string;\n  secret: string;\n  code: string;\n}\ninterface RegisteredState {\n  type: \"Registered\";\n}\ninterface FailedState {\n  type: \"Failed\";\n}\ninterface PendingState {\n  type: \"Pending\";\n}\n\ntype RegisterState =\n  | InputState\n  | VerifyState\n  | RegisteredState\n  | FailedState\n  | PendingState;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const RegisterPage = () => {\n  const classes = useStyles();\n  const [registerState, setRegisterState] = useState<RegisterState>({\n    type: \"Input\",\n    userId: \"\",\n  });\n\n  const getVerificationCode = (input: InputState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/authorize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: input.userId }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setRegisterState({\n          type: \"Verify\",\n          userId: input.userId,\n          secret: response.secret,\n          code: response.verification_code,\n        });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n  const confirmRegistration = (verify: VerifyState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/confirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: verify.userId, secret: verify.secret }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        const token = response.token;\n        return fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: `user_id=${verify.userId}&token=${token}`,\n        });\n      })\n      .then(() => {\n        setRegisterState({ type: \"Registered\" });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          第3期\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          ABCトーナメント参加登録\n        </Typography>\n        {/*<Typography component=\"h2\" variant=\"h5\">*/}\n        {/*  2020/11/22 19:00 JST 〆切*/}\n        {/*</Typography>*/}\n        {registerState.type === \"Input\" && (\n          <RegistrationForm\n            state={registerState}\n            setState={setRegisterState}\n            register={getVerificationCode}\n          />\n        )}\n        {registerState.type === \"Verify\" && (\n          <VerificationForm\n            state={registerState}\n            confirm={() => confirmRegistration(registerState)}\n          />\n        )}\n        {registerState.type === \"Failed\" && (\n          <p>登録に失敗しました。本人確認に失敗したか、既に登録済みです。</p>\n        )}\n        {registerState.type === \"Registered\" && <p>登録完了しました。</p>}\n        {registerState.type === \"Pending\" && <CircularProgress />}\n      </div>\n    </Container>\n  );\n};\n","import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[600],\n  },\n  lightBlue: {\n    color: lightBlue[200],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">順位合計</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.league.map((entry) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={entry.user.user_id}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { TournamentResponse, User } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = (props: { users: User[] | null | undefined }) => {\n  const { users } = props;\n  if (!users || users.length < 4) {\n    return null;\n  }\n  return (\n    <Container>\n      <Box m={2}>\n        <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n          優勝\n        </Typography>\n        <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n          {users[0].user_id}\n        </Typography>\n      </Box>\n      <Box m={2}>\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          準優勝\n        </Typography>\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          {users[1].user_id}\n        </Typography>\n      </Box>\n      <Box m={2}>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          3位タイ\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          {users[2].user_id}\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          {users[3].user_id}\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n  const keys = Object.keys(tournament);\n\n  const bracket = keys[selectedDivision]\n    ? tournament[keys[selectedDivision]]\n    : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        {props.seasonId === \"2\" && (\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textPrimary\"\n            display=\"inline\"\n            noWrap\n          >\n            2020/11/22 19:00 JST 登録〆切\n          </Typography>\n        )}\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {keys[selectedDivision] && (\n          <SingleWinnerTable users={tournament[keys[selectedDivision]].top4} />\n        )}\n        <Button onClick={() => setShowTop16(!showTop16)}>\n          {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n        </Button>\n        <Box display=\"flex\" justifyContent=\"center\">\n          {node && (\n            <GameNode\n              tournament={node}\n              depth={0}\n              config={{ depthLimit, defendingChampion }}\n            />\n          )}\n        </Box>\n        {league && (\n          <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n            <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n              順位決定リーグ\n            </Typography>\n            <LeagueTable\n              league={league}\n              promotionRank={bracket?.promotion_rank}\n              dropRank={bracket?.drop_rank}\n            />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) => {\n  return fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/1\"\n                className={classes.link}\n              >\n                第1期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/2\"\n                className={classes.link}\n              >\n                第2期\n              </Link>\n              {/*<Link*/}\n              {/*  component={RouterLink}*/}\n              {/*  variant=\"button\"*/}\n              {/*  color=\"textPrimary\"*/}\n              {/*  to=\"/register\"*/}\n              {/*  className={classes.link}*/}\n              {/*>*/}\n              {/*  登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 2;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}