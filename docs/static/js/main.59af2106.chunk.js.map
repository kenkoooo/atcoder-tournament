{"version":3,"sources":["components/RatingName.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","pages/Tournament.tsx","utils/API.ts","pages/UserListPage.tsx","App.tsx","utils/Constants.ts","index.tsx"],"names":["useRatingColorStyle","makeStyles","red","fontWeight","color","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","userId","children","rating","screenUserId","length","slice","Link","className","href","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","backgroundColor","nameContainer","padding","margin","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","user_id","Box","display","justifyContent","alignItems","item","flexDirection","itemChildren","itemChild","marginTop","marginBottom","position","content","top","right","transform","width","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","map","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","e","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","LeagueTable","league","Math","max","TableContainer","Table","TableHead","TableBody","promotionRank","colSpan","dropRank","battleResult","j","k","SingleWinnerTable","top4","Container","Object","entries","users","variant","m","Typography","AntTab","withStyles","root","selected","Tab","Tournament","useState","setTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","useEffect","seasonId","fetch","then","response","json","CssBaseline","Grid","container","justify","direction","noWrap","Tabs","value","onChange","v","centered","label","Button","onClick","promotion_rank","drop_rank","UserListPage","Map","ratingMap","setRatingMap","setUsers","r","ratings","forEach","set","registeredUsers","get","sort","a","b","maxWidth","component","RouterLink","to","theme","createMuiTheme","palette","type","useStyles","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","spacing","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","target","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59af2106.chunk.js","sourcesContent":["import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[600],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[600],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[400],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[500],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">順位合計</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.league.map((entry) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={entry.user.user_id}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { TournamentResponse, User } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n  const keys = Object.keys(tournament);\n\n  const bracket = keys[selectedDivision]\n    ? tournament[keys[selectedDivision]]\n    : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {keys[selectedDivision] && (\n          <SingleWinnerTable top4={tournament[keys[selectedDivision]].top4} />\n        )}\n        <Button onClick={() => setShowTop16(!showTop16)}>\n          {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n        </Button>\n        <Box display=\"flex\" justifyContent=\"center\">\n          {node && (\n            <GameNode\n              tournament={node}\n              depth={0}\n              config={{ depthLimit, defendingChampion }}\n            />\n          )}\n        </Box>\n        {league && league.length > 0 && (\n          <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n            <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n              順位決定リーグ\n            </Typography>\n            <LeagueTable\n              league={league}\n              promotionRank={bracket?.promotion_rank}\n              dropRank={bracket?.drop_rank}\n            />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) => {\n  // if (seasonId === \"3\") {\n  //   return fetchTournamentSeason3();\n  // }\n  return fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n};\n\nconst fetchTournamentSeason3 = async (): Promise<TournamentResponse> => {\n  const usersText = await fetch(\n    \"https://atcoder-tournament.herokuapp.com/api/users\"\n  ).then((response) => response.text());\n  const previousBracketsText = await fetch(\n    \"./bracket-2.json\"\n  ).then((response) => response.text());\n\n  const ratingText = await fetch(\"./ratings.json\").then((response) =>\n    response.text()\n  );\n\n  const result: string = await import(\n    \"../tournament-constructor/build\"\n  ).then((m) =>\n    m.construct_tournament(usersText, previousBracketsText, ratingText)\n  );\n  return JSON.parse(result);\n};\n","import {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { RatingName } from \"../components/RatingName\";\n\nexport const UserListPage = () => {\n  const [ratingMap, setRatingMap] = useState<Map<string, number>>(new Map());\n  const [users, setUsers] = useState<string[]>([]);\n\n  useEffect(() => {\n    fetch(\"./ratings.json\")\n      .then((r) => r.json())\n      .then((r) => r as { user_id: string; rating: number }[])\n      .then((ratings) => {\n        const map = new Map<string, number>();\n        ratings.forEach(({ user_id, rating }) => {\n          map.set(user_id, rating);\n        });\n        setRatingMap(map);\n      });\n  }, []);\n  useEffect(() => {\n    fetch(\"https://atcoder-tournament.herokuapp.com/api/users\")\n      .then((r) => r.json())\n      .then((r) => r as string[])\n      .then((r) => setUsers(r));\n  }, []);\n  const registeredUsers = users.map((userId) => {\n    const rating = ratingMap.get(userId) ?? 0;\n    return { rating, userId };\n  });\n  registeredUsers.sort((a, b) => b.rating - a.rating);\n  return (\n    <Container maxWidth=\"md\">\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography\n          variant=\"h4\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          第3期ABCトーナメント\n        </Typography>\n        <Typography component=\"h2\" variant=\"h5\" align=\"center\">\n          2021/01/30 19:00 JST 〆切\n        </Typography>\n        <Typography\n          variant=\"h4\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          <Button component={RouterLink} to=\"/register\">\n            登録\n          </Button>\n        </Typography>\n        {registeredUsers.map(({ userId, rating }) => {\n          return (\n            <Typography\n              key={userId}\n              variant=\"h6\"\n              align=\"center\"\n              color=\"textPrimary\"\n              display=\"inline\"\n              noWrap\n            >\n              <RatingName rating={rating}>{userId}</RatingName>\n            </Typography>\n          );\n        })}\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { UserListPage } from \"./pages/UserListPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/1\"\n                className={classes.link}\n              >\n                第1期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/2\"\n                className={classes.link}\n              >\n                第2期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/3\"\n                className={classes.link}\n              >\n                第3期\n              </Link>\n              {/*<Link*/}\n              {/*  component={RouterLink}*/}\n              {/*  variant=\"button\"*/}\n              {/*  color=\"textPrimary\"*/}\n              {/*  to=\"/register\"*/}\n              {/*  className={classes.link}*/}\n              {/*>*/}\n              {/*  参加登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/register\">*/}\n            {/*  <RegisterPage />*/}\n            {/*</Route>*/}\n            <Route path=\"/list\">\n              <UserListPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 3;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}