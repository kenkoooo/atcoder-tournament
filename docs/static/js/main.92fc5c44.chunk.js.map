{"version":3,"sources":["pages/RulePage.tsx","pages/SubmitPage.tsx","utils/Constants.ts","components/TournamentBracket/GameNode.tsx","components/TournamentBracket/index.tsx","utils/API.ts","utils/ResultResolver.ts","pages/Tournament.tsx","components/TournamentBracket/TreeMaker.ts","App.tsx","index.tsx"],"names":["RulePage","Container","maxWidth","CssBaseline","Typography","component","variant","align","color","gutterBottom","Link","href","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SubmitPage","classes","useState","userId","setUserId","registerState","setRegisterState","to","className","Avatar","noValidate","onSubmit","e","preventDefault","fetch","method","headers","body","then","catch","TextField","required","fullWidth","label","autoFocus","value","onChange","inputValue","target","test","Button","type","disabled","length","useStyle","red","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","rating","getRating","children","GameNode","node","name","map","i","key","TournamentBracket","root","fetchUserList","seasonId","a","response","json","userIds","fetchRatingMap","allUsers","userMap","Map","forEach","user","set","user_id","Promise","all","registeredUsers","validUsers","get","push","sort","b","localeCompare","resolveTournament","pickWinnerId","resolveByDfs","depth","maxDepth","index","child","childrenNames","getDepth","Math","max","heroContent","padding","Tournament","atCoderUserIds","setAtCoderUserIds","ratingMap","setRatingMap","contestResults","setContestResults","useEffect","fetchOrderedUserList","users","fetchContestResults","maps","players","leafCount","leafPlayers","player1","player2","currentPlayers","nextPlayers","node1","node2","makeTree","resolvedRoot","ranks","ratings","rank","Grid","container","justify","direction","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","cardHeader","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","now","Date","AppBar","position","elevation","Toolbar","RouterLink","noWrap","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92fc5c44.chunk.js","sourcesContent":["import { Container, CssBaseline, Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const RulePage = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        ABC Tournament ルール\n      </Typography>\n      <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n        <ul>\n          <li>ABC の結果を使ったトーナメント戦です。</li>\n          <li>\n            各試合は 1 対 1 で行われ、AtCoder の ABC\n            級のコンテストでの順位が高かった方が勝者となり、次の試合に進出します。\n          </li>\n          <li>\n            ABC級のコンテストとはレーティング更新対象が 0 - 1999\n            のコンテストです。\n          </li>\n          <li>\n            同順位の場合は2020年8月29日 19:00\n            JST時点でのレートが高い方を勝者とします。\n          </li>\n          <li>\n            各試合の対象となる ABC は以下のとおりです。\n            <ul>\n              <li>\n                1 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc177\">\n                  AtCoder Beginner Contest 177\n                </Link>\n              </li>\n              <li>2 回戦以降 - AtCoder からアナウンスがあり次第更新します。</li>\n            </ul>\n          </li>\n        </ul>\n      </Typography>\n    </Container>\n  );\n};\n","import {\n  Avatar,\n  Button,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { Redirect } from \"react-router-dom\";\nimport { SEASON_ID } from \"../utils/Constants\";\n\ntype RegisterState = \"Registered\" | \"Input\" | \"Failed\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const SubmitPage = () => {\n  const classes = useStyles();\n  const [userId, setUserId] = useState(\"\");\n  const [registerState, setRegisterState] = useState<RegisterState>(\"Input\");\n\n  const register = () => {\n    fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      },\n      body: `atcoder_id=${userId}&season_id=${SEASON_ID}`,\n    })\n      .then(() => {\n        setRegisterState(\"Registered\");\n      })\n      .catch(() => {\n        setRegisterState(\"Failed\");\n      });\n  };\n\n  if (registerState === \"Registered\") {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => {\n            e.preventDefault();\n            register();\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"AtCoder ID\"\n            autoFocus\n            value={userId}\n            onChange={(e) => {\n              const inputValue = e.target.value;\n              if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n                setUserId(inputValue);\n              }\n            }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={userId.length === 0}\n          >\n            Register\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n};\n","export const SEASON_ID = 1;\nexport const DEADLINE = 1598695200;\n\nexport const UNDEFINED_NODE = \"...\";\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BracketNode } from \"./index\";\nimport {\n  red,\n  orange,\n  yellow,\n  blue,\n  lightBlue,\n  green,\n  brown,\n  grey,\n} from \"@material-ui/core/colors\";\nconst useStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[500],\n  },\n  lightBlue: {\n    color: lightBlue[500],\n  },\n  green: {\n    color: green[500],\n  },\n  brown: {\n    color: brown[500],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\n\nconst RatingName = (props: {\n  children: string;\n  getRating: (userId: string) => number | undefined;\n}) => {\n  const classes = useStyle();\n  const rating = props.getRating(props.children);\n  if (!rating || rating < 400) {\n    return <p>{props.children}</p>;\n  } else if (rating < 800) {\n    return <p className={classes.brown}>{props.children}</p>;\n  } else if (rating < 1200) {\n    return <p className={classes.green}>{props.children}</p>;\n  } else if (rating < 1600) {\n    return <p className={classes.lightBlue}>{props.children}</p>;\n  } else if (rating < 2000) {\n    return <p className={classes.blue}>{props.children}</p>;\n  } else if (rating < 2400) {\n    return <p className={classes.yellow}>{props.children}</p>;\n  } else if (rating < 2800) {\n    return <p className={classes.orange}>{props.children}</p>;\n  }\n  return <p className={classes.red}>{props.children}</p>;\n};\n\ninterface Props {\n  node: BracketNode;\n  getRating: (userId: string) => number | undefined;\n}\n\nexport const GameNode = (props: Props) => {\n  if (props.node.children.length === 0) {\n    return (\n      <RatingName getRating={props.getRating}>{props.node.name}</RatingName>\n    );\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"item-parent\">\n          <RatingName getRating={props.getRating}>{props.node.name}</RatingName>\n        </div>\n        <div className=\"item-children\">\n          {props.node.children.map((node, i) => (\n            <div key={i} className=\"item-child\">\n              <GameNode getRating={props.getRating} node={node} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport { GameNode } from \"./GameNode\";\n\nexport interface BracketNode {\n  name: string;\n  children: BracketNode[];\n}\n\ninterface Props {\n  root: BracketNode;\n  getRating: (userId: string) => number | undefined;\n}\n\nexport const TournamentBracket = (props: Props) => {\n  return (\n    <div className=\"wrapper\">\n      <GameNode getRating={props.getRating} node={props.root} />\n    </div>\n  );\n};\n","async function fetchUserList(seasonId: string) {\n  const userIds: string[] = await fetch(\n    `https://atcoder-tournament.herokuapp.com/api/users?season_id=${seasonId}`\n  ).then((response) => response.json());\n  return userIds;\n}\n\nexport async function fetchRatingMap() {\n  const allUsers: { user_id: string; rating: number }[] = await fetch(\n    \"./ratings.json\"\n  ).then((response) => response.json());\n  const userMap = new Map<string, number>();\n  allUsers.forEach((user) => {\n    userMap.set(user.user_id, user.rating);\n  });\n  return userMap;\n}\n\nexport async function fetchOrderedUserList(seasonId: string) {\n  const [userMap, registeredUsers] = await Promise.all([\n    fetchRatingMap(),\n    fetchUserList(seasonId),\n  ]);\n\n  const validUsers = [] as { rating: number; userId: string }[];\n  registeredUsers.forEach((userId) => {\n    const rating = userMap.get(userId);\n    if (rating) {\n      validUsers.push({ rating, userId });\n    }\n  });\n  validUsers.sort((a, b) => {\n    if (a.rating === b.rating) {\n      return a.userId.localeCompare(b.userId);\n    } else {\n      return b.rating - a.rating;\n    }\n  });\n  return validUsers.map((user) => user.userId);\n}\n\nasync function fetchSingleContestMap(contestId: string) {\n  const contestResult = await fetch(`./${contestId}.json`).then((response) =>\n    response.json()\n  );\n  const results: { Rank: number; UserName: string }[] =\n    contestResult.StandingsData;\n  const map = new Map<string, number>();\n  results.forEach((result) => {\n    map.set(result.UserName, result.Rank);\n  });\n  return map;\n}\n\nexport async function fetchContestResults() {\n  return Promise.all([\n    // fetchSingleContestMap(\"abc176\"),\n    // fetchSingleContestMap(\"abc176\"),\n  ]);\n}\n","import { BracketNode } from \"../components/TournamentBracket\";\n\nconst getDepth = (node: BracketNode, depth: number) => {\n  let maxDepth = depth;\n  node.children.forEach((child) => {\n    maxDepth = Math.max(getDepth(child, depth + 1), maxDepth);\n  });\n  return maxDepth;\n};\n\nconst resolveByDfs = (\n  node: BracketNode,\n  depth: number,\n  maxDepth: number,\n  pickWinnerId: (index: number, userIds: string[]) => string\n): BracketNode => {\n  const index = maxDepth - depth - 1;\n  const children = node.children.map((child) =>\n    resolveByDfs(child, depth + 1, maxDepth, pickWinnerId)\n  );\n  const childrenNames = children.map((child) => child.name);\n  const name =\n    childrenNames.length === 0 ? node.name : pickWinnerId(index, childrenNames);\n  return { name, children };\n};\n\nexport const resolveTournament = (\n  root: BracketNode,\n  pickWinnerId: (index: number, userIds: string[]) => string\n) => {\n  const depth = getDepth(root, 0);\n  return resolveByDfs(root, 0, depth, pickWinnerId);\n};\n","import { Container, CssBaseline, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { TournamentBracket } from \"../components/TournamentBracket\";\nimport { makeTree } from \"../components/TournamentBracket/TreeMaker\";\nimport {\n  fetchContestResults,\n  fetchOrderedUserList,\n  fetchRatingMap,\n} from \"../utils/API\";\nimport { UNDEFINED_NODE } from \"../utils/Constants\";\nimport { resolveTournament } from \"../utils/ResultResolver\";\nimport \"./tournament.scss\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n}));\n\nexport const Tournament = (props: Props) => {\n  const [atCoderUserIds, setAtCoderUserIds] = useState<string[]>([]);\n  const [ratingMap, setRatingMap] = useState<Map<string, number> | null>(null);\n  const [contestResults, setContestResults] = useState<\n    Map<string, number>[] | null\n  >(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchOrderedUserList(props.seasonId).then((users) =>\n      setAtCoderUserIds(users)\n    );\n  }, [props.seasonId]);\n  useEffect(() => {\n    if (!ratingMap) {\n      fetchRatingMap().then((map) => setRatingMap(map));\n    }\n    if (!contestResults) {\n      fetchContestResults().then((maps) => setContestResults(maps));\n    }\n  });\n\n  const pickWinner = (index: number, children: string[]) => {\n    if (!contestResults || contestResults.length <= index) {\n      return UNDEFINED_NODE;\n    }\n    const ranks = children.map((child) => {\n      return contestResults[index].get(child) ?? 100000;\n    });\n    const ratings = children.map((child) => {\n      return ratingMap?.get(child) ?? 0;\n    });\n    const userInfo = children.map((userId, i) => ({\n      userId,\n      rating: ratings[i],\n      rank: ranks[i],\n    }));\n    const sorted = userInfo.sort((a, b) => {\n      if (a.rank === b.rank) {\n        return b.rating - a.rating;\n      }\n      return a.rank - b.rank;\n    });\n    return sorted[0].userId;\n  };\n\n  const root =\n    atCoderUserIds.length > 0\n      ? makeTree(atCoderUserIds)\n      : { name: \"loading\", children: [] };\n  const resolvedRoot = resolveTournament(root, pickWinner);\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.heroContent}>\n        <Grid container justify=\"center\" direction=\"column\">\n          <Typography\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            AtCoder Beginner Contest Tournament\n          </Typography>\n          <Typography\n            component=\"h4\"\n            variant=\"h4\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            登録締め切り : 2020年8月29日 19:00 JST\n          </Typography>\n          <Typography\n              component=\"div\"\n              variant=\"body1\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n          >\n            {`現在の参加人数: ${atCoderUserIds.length}`}\n          </Typography>\n          <TournamentBracket\n            root={resolvedRoot}\n            getRating={(userId) => ratingMap?.get(userId)}\n          />\n        </Grid>\n      </Container>\n    </>\n  );\n};\n","import { UNDEFINED_NODE } from \"../../utils/Constants\";\nimport { BracketNode } from \"./index\";\n\nexport const makeTree = (players: string[]): BracketNode => {\n  let leafCount = 1;\n  while (leafCount * 2 <= players.length) {\n    leafCount *= 2;\n  }\n\n  let leafPlayers = [] as BracketNode[];\n  for (let i = 0; i < leafCount; i++) {\n    if (leafCount + i < players.length) {\n      const player1 = players[i];\n      const player2 = players[leafCount + i];\n      leafPlayers.push({\n        name: UNDEFINED_NODE,\n        children: [\n          { name: player2, children: [] },\n          { name: player1, children: [] },\n        ],\n      });\n    } else {\n      leafPlayers.push({\n        name: players[i],\n        children: [],\n      });\n    }\n  }\n\n  let currentPlayers = leafPlayers;\n\n  while (currentPlayers.length > 1) {\n    const nextPlayers = [];\n    for (let i = 0; i < currentPlayers.length; i += 2) {\n      const node1 = currentPlayers[i];\n      if (i + 1 === currentPlayers.length) {\n        nextPlayers.push({ name: UNDEFINED_NODE, children: [node1] });\n      } else {\n        const node2 = currentPlayers[i + 1];\n        nextPlayers.push({ name: UNDEFINED_NODE, children: [node1, node2] });\n      }\n    }\n    currentPlayers = nextPlayers;\n  }\n\n  return currentPlayers[0];\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { RulePage } from \"./pages/RulePage\";\nimport { SubmitPage } from \"./pages/SubmitPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { DEADLINE, SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  const now = Date.now() / 1000;\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              {now < DEADLINE && (\n                <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/submit\"\n                  className={classes.link}\n                >\n                  登録\n                </Link>\n              )}\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/rule\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth=\"lg\">\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/submit\">\n              <SubmitPage />\n            </Route>\n            <Route path=\"/rule\">\n              <RulePage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}