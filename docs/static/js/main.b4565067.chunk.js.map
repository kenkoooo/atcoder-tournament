{"version":3,"sources":["components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","pages/Tournament.tsx","utils/API.ts","App.tsx","utils/Constants.ts","index.tsx"],"names":["useRatingColorStyle","makeStyles","red","color","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","userId","children","rating","screenUserId","length","slice","Link","className","href","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","backgroundColor","nameContainer","padding","margin","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","user_id","Box","display","justifyContent","alignItems","item","flexDirection","itemChildren","itemChild","marginTop","marginBottom","position","content","top","right","transform","width","height","itemParent","left","GameNode","promotedUser","tournament","depthLimit","depth","undefined","map","child","i","key","Tournament","useState","setTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","keys","Object","useEffect","seasonId","fetch","then","response","json","CssBaseline","Grid","container","justify","direction","Typography","variant","align","noWrap","Tabs","value","onChange","e","v","centered","Tab","label","Button","onClick","theme","createMuiTheme","palette","type","useStyles","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","spacing","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","component","RouterLink","to","target","rel","Container","maxWidth","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4565067.chunk.js","sourcesContent":["import { Box, Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[600],\n  },\n  lightBlue: {\n    color: lightBlue[200],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\n\nconst RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n  if (!rank) {\n    return (\n      <div className={classes.nodeBox}>\n        <div className={classes.nameContainer}>\n          <RatingName rating={user.rating}>{user.user_id}</RatingName>\n        </div>\n      </div>\n    );\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      <div className={classes.nameContainer}>\n        <RatingName rating={user.rating}>{user.user_id}</RatingName>\n      </div>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  depthLimit: number;\n}\n\nexport const GameNode = (props: Props) => {\n  const classes = useStyle();\n  const promotedUser = props.tournament.user?.user_id;\n  if (\n    props.tournament.children.length === 0 ||\n    props.depthLimit <= props.depth\n  ) {\n    return (\n      <RankedRatingName\n        user={props.tournament.user}\n        rank={props.tournament.rank}\n        winner={\n          props.promotedUser !== undefined &&\n          props.tournament.user?.user_id === props.promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={props.tournament.user}\n            rank={props.tournament.rank}\n            winner={\n              props.promotedUser !== undefined &&\n              props.tournament.user?.user_id === props.promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {props.tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={promotedUser}\n                depth={props.depth + 1}\n                depthLimit={props.depthLimit}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Button,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n  const keys = Object.keys(tournament);\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <Tab label={`CLASS ${key}`} key={i} />\n          ))}\n        </Tabs>\n        <Button onClick={() => setShowTop16(!showTop16)}>\n          {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n        </Button>\n\n        <Box display=\"flex\" justifyContent=\"center\">\n          {keys[selectedDivision] && (\n            <GameNode\n              tournament={tournament[keys[selectedDivision]]}\n              depth={0}\n              depthLimit={showTop16 ? 4 : 100}\n            />\n          )}\n        </Box>\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) =>\n  fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              {/*<Link*/}\n              {/*    component={RouterLink}*/}\n              {/*    variant=\"button\"*/}\n              {/*    color=\"textPrimary\"*/}\n              {/*    to=\"/submit\"*/}\n              {/*    className={classes.link}*/}\n              {/*>*/}\n              {/*  登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/submit\">*/}\n            {/*  <SubmitPage />*/}\n            {/*</Route>*/}\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 1;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}