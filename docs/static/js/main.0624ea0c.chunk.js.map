{"version":3,"sources":["components/RatingName.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","pages/Tournament.tsx","utils/API.ts","App.tsx","utils/Constants.ts","index.tsx"],"names":["useRatingColorStyle","makeStyles","red","color","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","userId","children","rating","screenUserId","length","slice","Link","className","href","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","backgroundColor","nameContainer","padding","margin","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","user_id","Box","display","justifyContent","alignItems","item","flexDirection","itemChildren","itemChild","marginTop","marginBottom","position","content","top","right","transform","width","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","map","child","i","key","LeagueTable","league","maxResultCount","Math","max","e","results","TableContainer","Table","TableHead","TableRow","TableCell","align","Array","from","keys","TableBody","entry","provisional_rank","ordinalSuffixOf","result","opponent","formatBattleResult","formatRank","win_count","rank_sum","battleResult","j","k","SingleWinnerTable","users","Container","m","Typography","variant","AntTab","withStyles","root","selected","Tab","Tournament","useState","setTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","Object","node","defending_champion","useEffect","seasonId","fetch","then","response","json","CssBaseline","Grid","container","justify","direction","noWrap","Tabs","value","onChange","v","centered","label","top4","Button","onClick","theme","createMuiTheme","palette","type","useStyles","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","spacing","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","component","RouterLink","to","target","rel","maxWidth","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0624ea0c.chunk.js","sourcesContent":["import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[600],\n  },\n  lightBlue: {\n    color: lightBlue[200],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  league: LeagueEntry[];\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">順位合計</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.league.map((entry) => (\n            <TableRow key={entry.user.user_id}>\n              <TableCell align=\"right\">{`${\n                entry.provisional_rank\n              }${ordinalSuffixOf(entry.provisional_rank)}`}</TableCell>\n              <TableCell>\n                <RatingName rating={entry.user.rating}>\n                  {entry.user.user_id}\n                </RatingName>\n              </TableCell>\n              {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n                const result = entry.results[i];\n                if (result) {\n                  return (\n                    <TableCell key={i} align=\"center\">\n                      <Box\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        flexDirection=\"column\"\n                      >\n                        {result.opponent && (\n                          <RatingName rating={result.opponent.rating}>\n                            {result.opponent.user_id}\n                          </RatingName>\n                        )}\n                        <span>{formatBattleResult(result.result)}</span>\n                        <span>{formatRank(result.result)}</span>\n                      </Box>\n                    </TableCell>\n                  );\n                } else {\n                  return <TableCell key={i}>{i + 1}回戦</TableCell>;\n                }\n              })}\n              <TableCell align=\"right\">{entry.win_count}</TableCell>\n              <TableCell align=\"right\">{entry.rank_sum}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { TournamentResponse, User } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = (props: { users: User[] | null | undefined }) => {\n  const { users } = props;\n  if (!users || users.length < 4) {\n    return null;\n  }\n  return (\n    <Container>\n      <Box m={2}>\n        <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n          優勝\n        </Typography>\n        <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n          {users[0].user_id}\n        </Typography>\n      </Box>\n      <Box m={2}>\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          準優勝\n        </Typography>\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          {users[1].user_id}\n        </Typography>\n      </Box>\n      <Box m={2}>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          3位タイ\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          {users[2].user_id}\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textPrimary\">\n          {users[3].user_id}\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n  const keys = Object.keys(tournament);\n\n  const node = keys[selectedDivision]\n    ? tournament[keys[selectedDivision]].node\n    : null;\n\n  const league = keys[selectedDivision]\n    ? tournament[keys[selectedDivision]].league\n    : null;\n\n  const defendingChampion = keys[selectedDivision]\n    ? tournament[keys[selectedDivision]].defending_champion\n    : undefined;\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        {props.seasonId === \"2\" && (\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            color=\"textPrimary\"\n            display=\"inline\"\n            noWrap\n          >\n            2020/11/22 19:00 JST 登録〆切\n          </Typography>\n        )}\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {keys[selectedDivision] && (\n          <SingleWinnerTable users={tournament[keys[selectedDivision]].top4} />\n        )}\n        <Button onClick={() => setShowTop16(!showTop16)}>\n          {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n        </Button>\n        <Box display=\"flex\" justifyContent=\"center\">\n          {node && (\n            <GameNode\n              tournament={node}\n              depth={0}\n              config={{ depthLimit, defendingChampion }}\n            />\n          )}\n        </Box>\n        {league && (\n          <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n            <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n              順位決定リーグ\n            </Typography>\n            <LeagueTable league={league} />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) => {\n  return fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/1\"\n                className={classes.link}\n              >\n                第1期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/2\"\n                className={classes.link}\n              >\n                第2期\n              </Link>\n              {/*<Link*/}\n              {/*  component={RouterLink}*/}\n              {/*  variant=\"button\"*/}\n              {/*  color=\"textPrimary\"*/}\n              {/*  to=\"/register\"*/}\n              {/*  className={classes.link}*/}\n              {/*>*/}\n              {/*  登録*/}\n              {/*</Link>*/}\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/register\">*/}\n            {/*  <RegisterPage />*/}\n            {/*</Route>*/}\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 2;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}