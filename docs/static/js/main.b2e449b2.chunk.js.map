{"version":3,"sources":["utils/PrivateAPI.ts","pages/LoginPage/UsernameInputForm.tsx","pages/LoginPage/VerificationForm.tsx","pages/LoginPage/index.tsx","pages/MyPage/index.tsx","utils/Constants.ts","components/RatingName.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","utils/API.ts","pages/Tournament.tsx","pages/TournamentListPage.tsx","pages/UserHistoryPage.tsx","pages/RecordPage.tsx","App.tsx","index.tsx"],"names":["SERVER","stageUser","userId","a","fetch","method","credentials","headers","body","JSON","stringify","user_id","response","json","token","signupUser","status","useLoginState","useSWR","url","useStyles","makeStyles","theme","form","width","marginTop","spacing","submit","margin","UsernameInputForm","props","classes","useState","username","setUsername","className","noValidate","onSubmit","e","preventDefault","TextField","variant","required","fullWidth","label","autoFocus","value","onChange","inputValue","target","test","Button","type","color","disabled","length","VerificationForm","href","code","onClick","onConfirm","paper","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","LoginPage","loginPageState","setLoginPageState","loginState","history","useHistory","error","data","push","pathname","Container","maxWidth","CssBaseline","Avatar","Typography","component","CircularProgress","revalidate","Spinner","MyPage","userData","then","useUserData","isSaving","setSaving","participateNext","setParticipateNext","useEffect","participate_next","participateForever","setParticipateForever","participate_forever","FormGroup","FormControlLabel","control","Checkbox","checked","REGISTER_SEASON_ID","useRatingColorStyle","red","fontWeight","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","c","children","rating","startsWith","Link","RouterLink","to","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","nameContainer","padding","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","CHAMPIONS","heno239","Tiramister","SSRS","snuke","sansen","WinnerTooltip","defendingChampion","Tooltip","title","role","aria-label","pastWonRounds","filter","pastSeasonId","Number","seasonId","map","round","join","RankedRatingName","user","rank","useParams","nameElement","Box","justifyContent","item","itemChildren","itemChild","marginBottom","position","content","top","right","transform","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","toFixed","LeagueTable","Math","max","league","TableContainer","Table","TableHead","includes","TableBody","idx","promotionRank","colSpan","dropRank","battleResult","j","k","SWRConfig","revalidateOnFocus","revalidateOnReconnect","fetchTournamentSeason9","usersResponse","text","usersText","previousBracketsResponse","previousBracketsText","ratingResponse","ratingText","wasm","construct_tournament","parse","useUserHistories","SingleWinnerTable","top4","Object","entries","users","m","AntTab","withStyles","root","selected","Tab","Tournament","useTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","Grid","container","justify","direction","noWrap","Tabs","v","centered","promotion_rank","drop_rank","flexGrow","link","HistoryRow","ranking","class","sort","b","first","second","season","TournamentListPage","tournaments","localeCompare","marginRight","BattleResultRow","classId","opponentResult","records","find","record","battles","battle","formattedResult","formatResult","UserHistoryPage","histories","fetcher","useBattleRecords","userHistory","sorted","parseInt","winCount","top_k","secondCount","a1Count","userRecord","flatMap","reverse","xs","Paper","topK","klass","final_rank","RecordPage","values","h","fourCount","x","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","textDecoration","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","rel","exact","path","render","match","params","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2e449b2.chunk.js","sourcesContent":["import useSWR from \"swr\";\nconst SERVER = \"https://abc-api.kenkoooo.com/api\";\n\nexport const stageUser = async (userId: string) => {\n  const response = await fetch(`${SERVER}/stage`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ user_id: userId }),\n  });\n  const body = await response.json();\n  return body.token as string;\n};\n\nexport const signupUser = async (userId: string) => {\n  const response = await fetch(`${SERVER}/signup`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ user_id: userId }),\n  });\n  return response.status === 200;\n};\n\nexport const useLoginState = () => {\n  return useSWR(`${SERVER}/verify`, async (url) => {\n    const response = await fetch(url, {\n      credentials: \"include\",\n    });\n    const body = await response.json();\n    return body.user_id as string;\n  });\n};\n\ninterface UserData {\n  participate_next: boolean;\n  participate_forever: boolean;\n}\n\nexport const useUserData = () => {\n  const fetcher = (url: string) =>\n    fetch(url, {\n      credentials: \"include\",\n    })\n      .then((response) => response.json())\n      .then((body) => body as UserData);\n\n  const url = `${SERVER}/data`;\n  return useSWR(url, fetcher);\n};\n\nexport const saveUserData = (data: UserData) =>\n  fetch(`${SERVER}/save_data`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n","import { Button, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\ninterface Props {\n  onSubmit: (username: string) => void;\n}\n\nexport const UsernameInputForm = (props: Props) => {\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.onSubmit(username);\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"AtCoder ID\"\n        autoFocus\n        value={username}\n        onChange={(e) => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n            setUsername(inputValue);\n          }\n        }}\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        disabled={username.length === 0}\n      >\n        ログイン\n      </Button>\n    </form>\n  );\n};\n","import { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\ninterface Props {\n  code: string;\n  onConfirm: () => void;\n}\nexport const VerificationForm = (props: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>\n        本人確認のため、AtCoder にログインして、\n        <a href=\"https://atcoder.jp/settings\" target=\"_blank\">\n          基本設定のページ\n        </a>\n        の「所属」を一時的に\n      </p>\n      <code>{props.code}</code>\n      <p>に変更して、「確認」ボタンを押してください。</p>\n      <Button\n        onClick={props.onConfirm}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        確認\n      </Button>\n    </>\n  );\n};\n","import {\n  Avatar,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, { useState } from \"react\";\nimport { signupUser, stageUser, useLoginState } from \"../../utils/PrivateAPI\";\nimport { UsernameInputForm } from \"./UsernameInputForm\";\nimport { VerificationForm } from \"./VerificationForm\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\ntype LoginPageState =\n  | {\n      type: \"input\";\n    }\n  | {\n      type: \"staging\";\n    }\n  | {\n      type: \"pending\";\n    }\n  | {\n      type: \"verify\";\n      token: string;\n      userId: string;\n    }\n  | {\n      type: \"failed\";\n    }\n  | {\n      type: \"verification_finished\";\n    };\n\nexport const LoginPage = () => {\n  const classes = useStyles();\n  const [loginPageState, setLoginPageState] = useState<LoginPageState>({\n    type: \"input\",\n  });\n  const loginState = useLoginState();\n  const history = useHistory();\n\n  if (!loginState.error && !loginState.data) {\n    return (\n      <Container maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <CircularProgress />\n        </div>\n      </Container>\n    );\n  }\n\n  if (loginState.data) {\n    history.push({ pathname: \"/mypage\" });\n    return <div />;\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ABCトーナメント参加登録ページ\n        </Typography>\n        {loginPageState.type === \"pending\" && <CircularProgress />}\n        {loginPageState.type === \"input\" && (\n          <UsernameInputForm\n            onSubmit={async (userId) => {\n              setLoginPageState({ type: \"pending\" });\n              const token = await stageUser(userId);\n              setLoginPageState({ type: \"verify\", token, userId });\n            }}\n          />\n        )}\n        {loginPageState.type === \"verify\" && (\n          <VerificationForm\n            code={loginPageState.token}\n            onConfirm={async () => {\n              setLoginPageState({ type: \"pending\" });\n              const signupSucceeded = await signupUser(loginPageState.userId);\n              if (signupSucceeded) {\n                await loginState.revalidate();\n                setLoginPageState({ type: \"verification_finished\" });\n              } else {\n                setLoginPageState({ type: \"failed\" });\n              }\n            }}\n          />\n        )}\n        {loginPageState.type === \"failed\" && <p>認証に失敗しました。</p>}\n        {loginPageState.type === \"verification_finished\" &&\n          loginState.error && (\n            <p>\n              ログイン情報の保存に失敗しました。サードパーティのCookieを許可するように、ブラウザの設定を変更してみてください。\n            </p>\n          )}\n      </div>\n    </Container>\n  );\n};\n","import {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  FormControlLabel,\n  FormGroup,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { REGISTER_SEASON_ID } from \"../../utils/Constants\";\nimport {\n  saveUserData,\n  useLoginState,\n  useUserData,\n} from \"../../utils/PrivateAPI\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Spinner = () => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <CircularProgress />\n      </div>\n    </Container>\n  );\n};\n\nexport const MyPage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const loginState = useLoginState();\n  const userData = useUserData();\n  const [isSaving, setSaving] = useState(false);\n\n  const [participateNext, setParticipateNext] = useState(false);\n  useEffect(() => {\n    if (userData.data?.participate_next) {\n      setParticipateNext(true);\n    }\n  }, [userData.data]);\n\n  const [participateForever, setParticipateForever] = useState(false);\n  useEffect(() => {\n    if (userData.data?.participate_forever) {\n      setParticipateForever(true);\n    }\n  }, [userData.data]);\n\n  if (!loginState.data && !loginState.error) {\n    return <Spinner />;\n  }\n  if (!loginState.data) {\n    history.push({ pathname: \"/login\" });\n    return <div />;\n  }\n\n  if (!userData.data && !userData.error) {\n    return <Spinner />;\n  }\n\n  const userId = loginState.data;\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}></div>\n      <Typography component=\"h1\" variant=\"h5\">\n        {userId}\n      </Typography>\n      <Typography component=\"h2\" variant=\"h5\">\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={participateNext}\n                onChange={() => setParticipateNext(!participateNext)}\n              />\n            }\n            label={`第${REGISTER_SEASON_ID}期トーナメントに参加する`}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={participateForever}\n                onChange={() => setParticipateForever(!participateForever)}\n              />\n            }\n            label={`第${REGISTER_SEASON_ID + 1}期以降も参加する`}\n          />\n        </FormGroup>\n      </Typography>\n      {isSaving ? (\n        <Spinner />\n      ) : (\n        <Button\n          onClick={async () => {\n            setSaving(true);\n            await saveUserData({\n              participate_next: participateNext,\n              participate_forever: participateForever,\n            });\n            await userData.revalidate();\n            setSaving(false);\n          }}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          設定を保存\n        </Button>\n      )}\n    </Container>\n  );\n};\n","\nexport const DUMMY_USER_ID_PREFIX = \"---non-existing-user\";\nexport const INF_RANK = 100000;\n\n\n// 最新の Season\nexport const SEASON_ID = 11;\n\n// 登録受付中の Season\nexport const REGISTER_SEASON_ID = 11;","import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { DUMMY_USER_ID_PREFIX } from \"../utils/Constants\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[400],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[400],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[300],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[400],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (userId.startsWith(DUMMY_USER_ID_PREFIX)) {\n    return <>-</>;\n  }\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  return (\n    <Link className={c} component={RouterLink} to={`/user/${userId}`}>\n      {userId}\n    </Link>\n  );\n};\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { grey, orange } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { User } from \"../../models/TournamentNode\";\nimport { INF_RANK } from \"../../utils/Constants\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: grey[800],\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? orange[500] : grey[400],\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nconst CHAMPIONS: { [key: string]: string[] } = {\n  heno239: [\"1\", \"2\", \"5\", \"6\"],\n  Tiramister: [\"3\"],\n  SSRS: [\"4\", \"9\"],\n  snuke: [\"7\"],\n  sansen: [\"8\"]\n};\n\nconst WinnerTooltip = (props: {\n  defendingChampion: boolean | undefined;\n  userId: string;\n  seasonId: string;\n}) => {\n  if (props.defendingChampion) {\n    return (\n      <Tooltip title=\"前期王者\">\n        <span role=\"img\" aria-label=\"king\">\n          &#x1F451;{\" \"}\n        </span>\n      </Tooltip>\n    );\n  }\n\n  const pastWonRounds = (CHAMPIONS[props.userId] ?? []).filter(\n    (pastSeasonId) => Number(pastSeasonId) < Number(props.seasonId)\n  );\n  if (pastWonRounds.length > 0) {\n    const label = pastWonRounds.map((round) => `${round}期`).join(\"・\");\n    return (\n      <Tooltip title={`第${label}王者`}>\n        <span role=\"img\" aria-label=\"king\">\n          &#x1F3C5;{\" \"}\n        </span>\n      </Tooltip>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      <WinnerTooltip\n        defendingChampion={props.defendingChampion}\n        userId={user.user_id}\n        seasonId={seasonId}\n      />\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank >= INF_RANK ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\nimport { DUMMY_USER_ID_PREFIX } from \"../../utils/Constants\";\n\nconst isUsingRankSum = (seasonId: string) => [\"2\", \"3\", \"4\"].includes(seasonId);\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum.toFixed(2)}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  seasonId: string;\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const maxResultCount = Math.max(...props.league.map((e) => e.results.length));\n  const league = props.league.filter(\n    (entry) => !entry.user.user_id.startsWith(DUMMY_USER_ID_PREFIX)\n  );\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">\n              {isUsingRankSum(props.seasonId) ? \"順位合計\" : \"順位調和平均\"}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {league.map((entry, idx) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={idx}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={idx}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={idx}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import useSWR from \"swr\";\nimport { BattleRecord } from \"../models/BattleRecord\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { UserHistory } from \"../models/UserHistory\";\n\nconst SWRConfig = {\n  revalidateOnFocus: false,\n  revalidateOnReconnect: false,\n};\n\nconst fetchTournamentSeason9 = async (): Promise<TournamentResponse> => {\n  const usersResponse = await fetch(\"https://abc-api.kenkoooo.com/api/users\");\n  const usersText = await usersResponse.text();\n\n  const previousBracketsResponse = await fetch(\"./bracket-10.json\");\n  const previousBracketsText = await previousBracketsResponse.text();\n\n  const ratingResponse = await fetch(\"./ratings.json\");\n  const ratingText = await ratingResponse.text();\n\n  const wasm = await import(\"../wasm/build\");\n\n  const result = wasm.construct_tournament(\n    usersText,\n    ratingText,\n    previousBracketsText\n  );\n  return JSON.parse(result);\n};\n\nexport const useTournament = (seasonId: string) => {\n  const fetcher = (url: string) => {\n    if (seasonId === \"11\") {\n      return fetchTournamentSeason9();\n    } else {\n      return fetch(url)\n        .then((response) => response.json())\n        .then((response) => response as TournamentResponse);\n    }\n  };\n  const url = `./bracket-${seasonId}.json`;\n  return useSWR(url, fetcher, SWRConfig);\n};\n\nexport const useUserHistories = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as UserHistory[]);\n  };\n\n  const url = \"./histories.json\";\n  return useSWR(url, fetcher, SWRConfig);\n};\n\nexport const useTournamentList = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as TournamentHistory[]);\n  };\n\n  const url = \"./tournaments.json\";\n  return useSWR(url, fetcher, SWRConfig);\n};\n\nexport const useBattleRecords = () => {\n  const fetcher = async (url: string) => {\n    const response = await fetch(url);\n    const body = await response.json();\n    return body as { [key: string]: BattleRecord[] };\n  };\n\n  const url = \"./battle_records.json\";\n  return useSWR(url, fetcher, SWRConfig);\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { User } from \"../models/TournamentNode\";\nimport { useTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const tournament = useTournament(props.seasonId).data;\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n\n  const keys = Object.keys(tournament ?? {});\n  const bracket =\n    keys[selectedDivision] && tournament\n      ? tournament[keys[selectedDivision]]\n      : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {tournament ? (\n          <>\n            {keys[selectedDivision] && (\n              <SingleWinnerTable\n                top4={tournament[keys[selectedDivision]].top4}\n              />\n            )}\n            <Button onClick={() => setShowTop16(!showTop16)}>\n              {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n            </Button>\n            <Box display=\"flex\" justifyContent=\"center\">\n              {node && (\n                <GameNode\n                  tournament={node}\n                  depth={0}\n                  config={{ depthLimit, defendingChampion }}\n                />\n              )}\n            </Box>\n            {league && league.length > 0 && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n                  順位決定リーグ\n                </Typography>\n                <LeagueTable\n                  seasonId={props.seasonId}\n                  league={league}\n                  promotionRank={bracket?.promotion_rank}\n                  dropRank={bracket?.drop_rank}\n                />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { useTournamentList } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  link: {\n    color: theme.palette.grey[50],\n  },\n}));\n\nconst HistoryRow = (e: TournamentHistory) => {\n  const classes = useStyles();\n  const ranking = e.ranking.map(([rank, entry]) => ({\n    class: entry.class,\n    userId: entry.user_id,\n    rank,\n  }));\n  ranking.sort((a, b) => a.rank - b.rank);\n\n  const first: string | undefined = ranking[0]?.userId;\n  const second: string | undefined = ranking[1]?.userId;\n\n  return (\n    <TableRow>\n      <TableCell variant=\"head\">{e.season}</TableCell>\n      <TableCell>\n        <Typography variant=\"h6\">\n          <Link\n            className={classes.link}\n            component={RouterLink}\n            to={`/user/${first}`}\n          >\n            {first}\n          </Link>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography variant=\"h6\">\n          <Link\n            className={classes.link}\n            component={RouterLink}\n            to={`/user/${second}`}\n          >\n            {second}\n          </Link>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Link\n          component={RouterLink}\n          variant=\"button\"\n          color=\"textPrimary\"\n          to={`/tournament/${e.season}`}\n          className={classes.link}\n        >\n          {`第${e.season}期トーナメント表`}\n        </Link>\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const TournamentListPage = () => {\n  const classes = useStyles();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  tournaments.sort((a, b) => b.season.localeCompare(a.season));\n\n  return (\n    <Container className={classes.root}>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>期</TableCell>\n              <TableCell>優勝</TableCell>\n              <TableCell>準優勝</TableCell>\n              <TableCell>トーナメント表</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tournaments.map((e) => (\n              <HistoryRow key={e.season} {...e} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { RatingName } from \"../components/RatingName\";\nimport { BattleRecord } from \"../models/BattleRecord\";\nimport { BattleResult, User } from \"../models/TournamentNode\";\nimport { useBattleRecords, useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { INF_RANK } from \"../utils/Constants\";\n\nconst formatTopK = (season: number, topK: number, klass: string) => {\n  if (topK === 1) {\n    if (klass === \"A\" || klass === \"A1\") {\n      return `第${season}期王者`;\n    } else {\n      return \"優勝\";\n    }\n  } else if (topK === 2) {\n    return \"準優勝\";\n  } else {\n    return `ベスト${topK}`;\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nconst BattleResultRow = (props: {\n  userId: string;\n  opponent: User;\n  season: string;\n  classId: string;\n  result: BattleResult;\n  records: { [key: string]: BattleRecord[] };\n}) => {\n  const classes = useStyles();\n  const { userId, opponent, season, classId, result, records } = props;\n\n  const opponentResult = records[opponent.user_id]\n    ?.find((record) => record.class === classId && record.season === season)\n    ?.battles.find((battle) => battle.opponent?.user_id === userId);\n\n  const formatResult = (result: BattleResult) => {\n    switch (result.result) {\n      case \"SkipLose\":\n        if (season === \"1\") {\n          return null;\n        } else {\n          return \"不戦敗\";\n        }\n      case \"Win\": {\n        const opponentRank =\n          opponentResult?.result.result === \"Lose\"\n            ? opponentResult.result.rank\n            : 0;\n        if (\n          opponentRank >= INF_RANK ||\n          opponentResult?.result.result === \"SkipLose\" ||\n          opponentResult?.result.result === \"Writer\"\n        ) {\n          return \"○ (不戦勝)\";\n        } else {\n          return \"○\";\n        }\n      }\n      case \"Lose\":\n        if (season === \"1\" && result.rank >= INF_RANK) {\n          return null;\n        } else {\n          return \"×\";\n        }\n      case \"SkipWin\":\n        return \"不戦勝\";\n      case \"Writer\":\n        return \"Writer\";\n      case \"NotYet\":\n        return null;\n    }\n  };\n\n  const formattedResult = formatResult(result);\n  if (!formattedResult) {\n    return null;\n  } else if (formattedResult === \"Writer\") {\n    return (\n      <TableRow>\n        <TableCell></TableCell>\n        <TableCell>Writer</TableCell>\n        <TableCell>\n          <Link\n            component={RouterLink}\n            to={`/tournament/${season}`}\n            className={classes.link}\n          >\n            第{season}期 {classId}クラス\n          </Link>\n        </TableCell>\n      </TableRow>\n    );\n  } else {\n    return (\n      <TableRow>\n        <TableCell>\n          <RatingName rating={opponent.rating}>{opponent.user_id}</RatingName>\n        </TableCell>\n        <TableCell>{formattedResult}</TableCell>\n        <TableCell>\n          <Link\n            component={RouterLink}\n            to={`/tournament/${season}`}\n            className={classes.link}\n          >\n            第{season}期 {classId}クラス\n          </Link>\n        </TableCell>\n      </TableRow>\n    );\n  }\n};\n\nexport const UserHistoryPage = () => {\n  const classes = useStyles();\n  const { user_id } = useParams<{ user_id: string }>();\n  const histories = useUserHistories().data;\n  const records = useBattleRecords().data;\n  if (!histories || !records) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const userHistory =\n    histories.find((e) => e.user_id === user_id)?.histories ?? {};\n  const sorted = Object.entries(userHistory)\n    .map(([season, result]) => ({\n      season: parseInt(season),\n      result,\n    }))\n    .sort((a, b) => b.season - a.season);\n\n  const winCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 1).length;\n  const secondCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 2).length;\n  const a1Count = sorted.filter((e) => e.result.class === \"A1\").length;\n\n  const userRecord = (records[user_id] ?? [])\n    .sort((a, b) => b.season.localeCompare(a.season))\n    .flatMap((record) => {\n      const { class: classId, user, battles, season } = record;\n      const reversed = Array.from(battles).reverse();\n      return reversed\n        .filter((battle): battle is {\n          opponent: User;\n          result: BattleResult;\n        } => {\n          return battle.opponent !== null;\n        })\n        .map((battle) => {\n          const { opponent, result } = battle;\n          return {\n            user,\n            opponent,\n            season,\n            classId,\n            result,\n          };\n        });\n    });\n\n  return (\n    <Container className={classes.root}>\n      <Grid container>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <Link\n              className={classes.link}\n              href={`https://atcoder.jp/users/${user_id}`}\n            >\n              {user_id}\n            </Link>\n          </Typography>\n          {winCount > 0 && (\n            <Typography variant=\"h6\">優勝{winCount}回</Typography>\n          )}\n          {secondCount > 0 && (\n            <Typography variant=\"h6\">準優勝{secondCount}回</Typography>\n          )}\n          {a1Count > 0 && (\n            <Typography variant=\"h6\">A1在籍{a1Count}期</Typography>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          {sorted.map((e) => (\n            <Paper key={e.season} className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\">\n                    <Link\n                      component={RouterLink}\n                      to={`/tournament/${e.season}`}\n                      className={classes.link}\n                    >\n                      第{e.season}期 {e.result.class}クラス\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item xs={4} direction=\"column\" container>\n                  <Typography variant=\"body1\">トーナメント</Typography>\n                  <Typography variant=\"h4\">\n                    {formatTopK(e.season, e.result.top_k, e.result.class)}\n                  </Typography>\n                </Grid>\n                {e.result.final_rank && (\n                  <Grid item xs direction=\"column\" container>\n                    <Typography variant=\"body1\">最終順位</Typography>\n                    <Typography variant=\"h4\">\n                      {e.result.final_rank}位\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          ))}\n        </Grid>\n        <Grid item xs={12}>\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>対戦相手</TableCell>\n                  <TableCell>勝敗</TableCell>\n                  <TableCell>トーナメント</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {userRecord.map((record, i) => (\n                  <BattleResultRow\n                    key={i}\n                    {...record}\n                    userId={user_id}\n                    records={records}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n}));\nexport const RecordPage = () => {\n  const classes = useStyles();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const users = histories\n    .map((e) => {\n      const userId = e.user_id;\n      const histories = Object.values(e.histories).filter(\n        (h) => h.class === \"A1\" || h.class === \"A\"\n      );\n      const winCount = histories.filter((h) => h.top_k === 1).length;\n      const secondCount = histories.filter((h) => h.top_k === 2).length;\n      const fourCount = histories.filter((h) => h.top_k === 4).length;\n      const a1Count = histories.filter((h) => h.class === \"A1\").length;\n      return {\n        a1Count,\n        winCount,\n        secondCount,\n        fourCount,\n        userId,\n      };\n    })\n    .filter((x) => x.a1Count + x.winCount + x.secondCount + x.fourCount > 0);\n  users.sort((a, b) => {\n    if (a.winCount !== b.winCount) {\n      return b.winCount - a.winCount;\n    }\n    if (a.secondCount !== b.secondCount) {\n      return b.secondCount - a.secondCount;\n    }\n    if (a.fourCount !== b.fourCount) {\n      return b.fourCount - a.fourCount;\n    }\n    if (a.a1Count !== b.a1Count) {\n      return b.a1Count - a.a1Count;\n    }\n    return a.userId.localeCompare(b.userId);\n  });\n\n  return (\n    <Container>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"head\">ユーザー</TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              準優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              ベスト4\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              A1在籍\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.userId}>\n              <TableCell variant=\"head\">\n                <Typography variant=\"h6\">\n                  <Link\n                    className={classes.link}\n                    component={RouterLink}\n                    to={`/user/${user.userId}`}\n                  >\n                    {user.userId}\n                  </Link>\n                </Typography>\n              </TableCell>\n              <TableCell align=\"center\">{user.winCount}</TableCell>\n              <TableCell align=\"center\">{user.secondCount}</TableCell>\n              <TableCell align=\"center\">{user.fourCount}</TableCell>\n              <TableCell align=\"center\">{user.a1Count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { MyPage } from \"./pages/MyPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { TournamentListPage } from \"./pages/TournamentListPage\";\nimport { UserHistoryPage } from \"./pages/UserHistoryPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\nimport { RecordPage } from \"./pages/RecordPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/tournament/10\"\n                  className={classes.link}\n              >\n                第10期\n              </Link>\n              <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/tournament/9\"\n                  className={classes.link}\n              >\n                第9期\n              </Link>\n              <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/tournament/8\"\n                  className={classes.link}\n              >\n                第8期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/past\"\n                className={classes.link}\n              >\n                過去の開催\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/record\"\n                className={classes.link}\n              >\n                記録\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/login\"\n                className={classes.link}\n              >\n                ログイン\n              </Link>\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:seasonId([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.seasonId;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/mypage\">\n              <MyPage />\n            </Route>\n            <Route path=\"/user/:user_id([0-9a-zA-Z_]+)\">\n              <UserHistoryPage />\n            </Route>\n            <Route path=\"/past\">\n              <TournamentListPage />\n            </Route>\n            <Route path=\"/record\">\n              <RecordPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}