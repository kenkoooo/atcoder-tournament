{"version":3,"sources":["pages/RegisterPage.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","pages/Tournament.tsx","utils/API.ts","App.tsx","utils/Constants.ts","index.tsx"],"names":["RegistrationForm","props","classes","useStyles","className","form","noValidate","onSubmit","e","preventDefault","register","state","TextField","variant","margin","required","fullWidth","label","autoFocus","value","userId","onChange","inputValue","target","test","setState","Button","type","color","submit","disabled","length","VerificationForm","code","onClick","confirm","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","RegisterPage","useState","registerState","setRegisterState","Container","maxWidth","CssBaseline","Avatar","Typography","component","input","fetch","method","headers","body","JSON","stringify","user_id","then","response","json","verification_code","catch","verify","token","CircularProgress","useRatingColorStyle","red","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","c","children","rating","screenUserId","slice","Link","href","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","nameContainer","padding","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","Box","justifyContent","item","itemChildren","itemChild","marginBottom","position","content","top","right","transform","height","itemParent","left","GameNode","promotedUser","tournament","depthLimit","depth","undefined","map","child","i","key","Tournament","setTournament","selectedDivision","setSelectedDivision","showTop16","setShowTop16","keys","Object","useEffect","seasonId","Grid","container","justify","direction","align","noWrap","Tabs","v","centered","Tab","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","RouterLink","to","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c517fe9f.chunk.js","sourcesContent":["import {\n  Avatar,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nconst RegistrationForm = (props: {\n  state: InputState;\n  setState: (input: InputState) => void;\n  register: (input: InputState) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.register(props.state);\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"AtCoder ID\"\n        autoFocus\n        value={props.state.userId}\n        onChange={(e) => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n            props.setState({\n              ...props.state,\n              userId: inputValue,\n            });\n          }\n        }}\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        disabled={props.state.userId.length === 0}\n      >\n        登録\n      </Button>\n    </form>\n  );\n};\n\nconst VerificationForm = (props: {\n  state: VerifyState;\n  confirm: () => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>本人確認のため、AtCoder にログインして、所属を一時的に</p>\n      <code>{props.state.code}</code>\n      <p>に変更して、「確認」ボタンを押してください。</p>\n      <Button\n        onClick={props.confirm}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        確認\n      </Button>\n    </>\n  );\n};\n\ninterface InputState {\n  type: \"Input\";\n  userId: string;\n}\ninterface VerifyState {\n  type: \"Verify\";\n  userId: string;\n  code: string;\n}\ninterface RegisteredState {\n  type: \"Registered\";\n}\ninterface FailedState {\n  type: \"Failed\";\n}\ninterface PendingState {\n  type: \"Pending\";\n}\n\ntype RegisterState =\n  | InputState\n  | VerifyState\n  | RegisteredState\n  | FailedState\n  | PendingState;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const RegisterPage = () => {\n  const classes = useStyles();\n  const [registerState, setRegisterState] = useState<RegisterState>({\n    type: \"Input\",\n    userId: \"\",\n  });\n\n  const getVerificationCode = (input: InputState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/authorize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: input.userId }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setRegisterState({\n          type: \"Verify\",\n          userId: input.userId,\n          code: response.verification_code,\n        });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n  const confirmRegistration = (verify: VerifyState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/confirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: verify.userId }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        const token = response.token;\n        return fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: `user_id=${verify.userId}&token=${token}`,\n        });\n      })\n      .then(() => {\n        setRegisterState({ type: \"Registered\" });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          第2期\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          ABCトーナメント参加登録\n        </Typography>\n        {registerState.type === \"Input\" && (\n          <RegistrationForm\n            state={registerState}\n            setState={setRegisterState}\n            register={getVerificationCode}\n          />\n        )}\n        {registerState.type === \"Verify\" && (\n          <VerificationForm\n            state={registerState}\n            confirm={() => confirmRegistration(registerState)}\n          />\n        )}\n        {registerState.type === \"Failed\" && (\n          <p>登録に失敗しました。本人確認に失敗したか、既に登録済みです。</p>\n        )}\n        {registerState.type === \"Registered\" && <p>登録完了しました。</p>}\n        {registerState.type === \"Pending\" && <CircularProgress />}\n      </div>\n    </Container>\n  );\n};\n","import { Box, Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[600],\n  },\n  lightBlue: {\n    color: lightBlue[200],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\n\nconst RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} href={`https://atcoder.jp/users/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n  if (!rank) {\n    return (\n      <div className={classes.nodeBox}>\n        <div className={classes.nameContainer}>\n          <RatingName rating={user.rating}>{user.user_id}</RatingName>\n        </div>\n      </div>\n    );\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      <div className={classes.nameContainer}>\n        <RatingName rating={user.rating}>{user.user_id}</RatingName>\n      </div>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  depthLimit: number;\n}\n\nexport const GameNode = (props: Props) => {\n  const classes = useStyle();\n  const promotedUser = props.tournament.user?.user_id;\n  if (\n    props.tournament.children.length === 0 ||\n    props.depthLimit <= props.depth\n  ) {\n    return (\n      <RankedRatingName\n        user={props.tournament.user}\n        rank={props.tournament.rank}\n        winner={\n          props.promotedUser !== undefined &&\n          props.tournament.user?.user_id === props.promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={props.tournament.user}\n            rank={props.tournament.rank}\n            winner={\n              props.promotedUser !== undefined &&\n              props.tournament.user?.user_id === props.promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {props.tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={promotedUser}\n                depth={props.depth + 1}\n                depthLimit={props.depthLimit}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Button,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { fetchTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nexport const Tournament = (props: Props) => {\n  const [tournament, setTournament] = useState<TournamentResponse>({});\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n  const keys = Object.keys(tournament);\n\n  useEffect(() => {\n    fetchTournament(props.seasonId).then((response) => {\n      setTournament(response);\n    });\n  }, [props.seasonId]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <Tab label={`CLASS ${key}`} key={i} />\n          ))}\n        </Tabs>\n        <Button onClick={() => setShowTop16(!showTop16)}>\n          {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n        </Button>\n\n        <Box display=\"flex\" justifyContent=\"center\">\n          {keys[selectedDivision] && (\n            <GameNode\n              tournament={tournament[keys[selectedDivision]]}\n              depth={0}\n              depthLimit={showTop16 ? 4 : 100}\n            />\n          )}\n        </Box>\n      </Grid>\n    </>\n  );\n};\n","import { TournamentResponse } from \"../models/TournamentNode\";\n\nexport const fetchTournament = (seasonId: string) =>\n  fetch(`./bracket-${seasonId}.json`)\n    .then((response) => response.json())\n    .then((response) => response as TournamentResponse);\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/register\"\n                className={classes.link}\n              >\n                登録\n              </Link>\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 1;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}