{"version":3,"sources":["pages/RegisterPage/index.tsx","components/RatingName.tsx","components/GameNode/RankedRatingName.tsx","components/GameNode/GameNode.tsx","components/LeagueTable/LeagueTable.tsx","utils/API.ts","pages/Tournament.tsx","pages/TournamentListPage.tsx","pages/TournamentRankingPage.tsx","pages/UserHistoryPage.tsx","pages/RecordPage.tsx","App.tsx","utils/Constants.ts","index.tsx"],"names":["RegistrationForm","props","classes","useStyles","className","form","noValidate","onSubmit","e","preventDefault","register","state","TextField","variant","margin","required","fullWidth","label","autoFocus","value","userId","onChange","inputValue","target","test","Button","type","color","submit","disabled","length","VerificationForm","code","onClick","confirm","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","width","RegisterPage","useState","registerState","setRegisterState","Container","maxWidth","CssBaseline","Avatar","Typography","component","input","fetch","method","headers","body","JSON","stringify","user_id","trim","then","response","json","secret","verification_code","catch","verify","token","CircularProgress","useRatingColorStyle","red","fontWeight","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","c","children","rating","screenUserId","slice","Link","RouterLink","to","useStyle","nodeBox","textShadow","fontFamily","borderWidth","borderRadius","fontSize","minWidth","minHeight","nameContainer","padding","textAlign","rankContainer","marginLeft","winner","nodeText","rankText","RankedRatingName","user","rank","nameElement","defendingChampion","Tooltip","title","role","aria-label","Box","justifyContent","item","itemChildren","itemChild","marginBottom","position","content","top","right","transform","height","itemParent","left","GameNode","tournament","depth","config","promotedUser","nextPromotedUser","depthLimit","undefined","map","child","i","key","UserEntryRow","entry","maxResultCount","TableRow","TableCell","align","provisional_rank","ordinalSuffixOf","Array","from","keys","result","results","opponent","formatBattleResult","formatRank","win_count","rank_sum","LeagueTable","league","Math","max","TableContainer","Table","TableHead","TableBody","promotionRank","colSpan","dropRank","battleResult","j","k","fetchTournamentSeason5","a","usersResponse","text","usersText","previousBracketsResponse","previousBracketsText","ratingResponse","ratingText","wasm","construct_tournament","parse","useUserHistories","useSWR","url","revalidateOnFocus","revalidateOnReconnect","useTournamentList","SingleWinnerTable","top4","Object","entries","users","m","AntTab","withStyles","root","selected","Tab","Tournament","seasonId","useTournament","data","selectedDivision","setSelectedDivision","showTop16","setShowTop16","bracket","node","defending_champion","Grid","container","justify","direction","noWrap","Tabs","v","centered","promotion_rank","drop_rank","flexGrow","marginRight","caption","link","Winners","winners","ranking","sort","b","Paper","xs","season","expandable","TournamentListPage","tournaments","localeCompare","table","TournamentRankingPage","useParams","find","class","UserHistoryPage","histories","userHistory","sorted","parseInt","winCount","filter","top_k","secondCount","a1Count","href","topK","klass","final_rank","RecordPage","values","h","fourCount","x","createMuiTheme","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","textDecoration","heroContent","cardHeader","cardPricing","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","App","AppBar","elevation","Toolbar","rel","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a447cb07.chunk.js","sourcesContent":["import {\n  Avatar,\n  Button,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nconst RegistrationForm = (props: {\n  state: InputState;\n  onChange: (input: InputState) => void;\n  register: (input: InputState) => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <form\n      className={classes.form}\n      noValidate\n      onSubmit={(e) => {\n        e.preventDefault();\n        props.register(props.state);\n      }}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        label=\"AtCoder ID\"\n        autoFocus\n        value={props.state.userId}\n        onChange={(e) => {\n          const inputValue = e.target.value;\n          if (/^[a-zA-Z0-9\\-_]*$/.test(inputValue)) {\n            props.onChange({\n              ...props.state,\n              userId: inputValue,\n            });\n          }\n        }}\n      />\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n        disabled={props.state.userId.length === 0}\n      >\n        登録\n      </Button>\n    </form>\n  );\n};\n\nconst VerificationForm = (props: {\n  state: VerifyState;\n  confirm: () => void;\n}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <p>本人確認のため、AtCoder にログインして、所属を一時的に</p>\n      <code>{props.state.code}</code>\n      <p>に変更して、「確認」ボタンを押してください。</p>\n      <Button\n        onClick={props.confirm}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.submit}\n      >\n        確認\n      </Button>\n    </>\n  );\n};\n\ninterface InputState {\n  type: \"Input\";\n  userId: string;\n}\ninterface VerifyState {\n  type: \"Verify\";\n  userId: string;\n  secret: string;\n  code: string;\n}\ninterface RegisteredState {\n  type: \"Registered\";\n}\ninterface FailedState {\n  type: \"Failed\";\n}\ninterface PendingState {\n  type: \"Pending\";\n}\n\ntype RegisterState =\n  | InputState\n  | VerifyState\n  | RegisteredState\n  | FailedState\n  | PendingState;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const RegisterPage = () => {\n  const classes = useStyles();\n  const [registerState, setRegisterState] = useState<RegisterState>({\n    type: \"Input\",\n    userId: \"\",\n  });\n\n  const getVerificationCode = (input: InputState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/authorize\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: input.userId.trim() }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setRegisterState({\n          type: \"Verify\",\n          userId: input.userId,\n          secret: response.secret,\n          code: response.verification_code,\n        });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n  const confirmRegistration = (verify: VerifyState) => {\n    setRegisterState({ type: \"Pending\" });\n    fetch(\"https://atcoder-auth.kenkoooo.com/api/confirm\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user_id: verify.userId, secret: verify.secret }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        const token = response.token;\n        return fetch(\"https://atcoder-tournament.herokuapp.com/api/user\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          body: `user_id=${verify.userId}&token=${token}`,\n        });\n      })\n      .then(() => {\n        setRegisterState({ type: \"Registered\" });\n      })\n      .catch(() => {\n        setRegisterState({\n          type: \"Failed\",\n        });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          第5期\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          ABCトーナメント参加登録\n        </Typography>\n        <Typography component=\"h3\" variant=\"h6\">\n          2021-07-24(土) 20:30〆切\n        </Typography>\n        {registerState.type === \"Input\" && (\n          <RegistrationForm\n            state={registerState}\n            onChange={setRegisterState}\n            register={getVerificationCode}\n          />\n        )}\n        {registerState.type === \"Verify\" && (\n          <VerificationForm\n            state={registerState}\n            confirm={() => confirmRegistration(registerState)}\n          />\n        )}\n        {registerState.type === \"Failed\" && (\n          <>\n            <p>登録に失敗しました。本人確認に失敗したか、既に登録済みです。</p>\n          </>\n        )}\n        {registerState.type === \"Registered\" && <p>登録完了しました。</p>}\n        {registerState.type === \"Pending\" && <CircularProgress />}\n      </div>\n    </Container>\n  );\n};\n","import { Link } from \"@material-ui/core\";\nimport {\n  blue,\n  brown,\n  green,\n  grey,\n  lightBlue,\n  orange,\n  red,\n  yellow,\n} from \"@material-ui/core/colors\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useRatingColorStyle = makeStyles(() => ({\n  red: {\n    fontWeight: \"bold\",\n    color: red[500],\n  },\n  orange: {\n    fontWeight: \"bold\",\n    color: orange[500],\n  },\n  yellow: {\n    fontWeight: \"bold\",\n    color: yellow[500],\n  },\n  blue: {\n    fontWeight: \"bold\",\n    color: blue[600],\n  },\n  lightBlue: {\n    fontWeight: \"bold\",\n    color: lightBlue[200],\n  },\n  green: {\n    fontWeight: \"bold\",\n    color: green[600],\n  },\n  brown: {\n    fontWeight: \"bold\",\n    color: brown[400],\n  },\n  grey: {\n    fontWeight: \"bold\",\n    color: grey[500],\n  },\n}));\nexport const RatingName = (props: {\n  children: string;\n  rating: number | undefined;\n}) => {\n  const classes = useRatingColorStyle();\n  const userId = props.children;\n  const rating = props.rating;\n  if (!rating) {\n    return <p>{userId}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  const screenUserId =\n    userId.length <= 13 ? userId : userId.slice(0, 10) + \"...\";\n  return (\n    <Link className={c} component={RouterLink} to={`/user/${userId}`}>\n      {screenUserId}\n    </Link>\n  );\n};\n","import { Box, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { User } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\ninterface Props {\n  user: User | null;\n  rank: number | null;\n  winner?: boolean;\n  defendingChampion?: boolean;\n}\n\nconst useStyle = makeStyles({\n  nodeBox: {\n    textShadow: \"rgb(34,34,34) 1px 1px 1px\",\n    fontFamily: '\"Roboto Light\", sans-serif',\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    fontSize: \"12px\",\n    minWidth: \"120px\",\n    minHeight: \"24px\",\n    backgroundColor: \"#595a5e\",\n  },\n  nameContainer: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankContainer: {\n    padding: \"3px\",\n    borderWidth: 0,\n    borderRadius: \"3px\",\n    marginLeft: \"auto\",\n    fontSize: \"10px\",\n    minWidth: \"24px\",\n    backgroundColor: (props: { winner?: boolean }) =>\n      props.winner ? \"#f58540\" : \"#828489\",\n  },\n  nodeText: {\n    padding: \"3px\",\n    margin: 0,\n    textAlign: \"center\",\n  },\n  rankText: {\n    color: \"black\",\n    textAlign: \"center\",\n    textShadow: \"none\",\n  },\n});\n\nexport const RankedRatingName = (props: Props) => {\n  const { user, rank, winner } = props;\n  const classes = useStyle({ winner });\n\n  if (!user) {\n    return (\n      <div className={classes.nodeBox}>\n        <p>...</p>\n      </div>\n    );\n  }\n\n  const nameElement = (\n    <div className={classes.nameContainer}>\n      {props.defendingChampion ? (\n        <Tooltip title=\"前回優勝者\">\n          <span role=\"img\" aria-label=\"king\">\n            👑{\" \"}\n          </span>\n        </Tooltip>\n      ) : null}\n      <RatingName rating={user.rating}>{user.user_id}</RatingName>\n    </div>\n  );\n\n  if (!rank) {\n    return <div className={classes.nodeBox}>{nameElement}</div>;\n  }\n\n  const rankText = rank > 100000 ? \"-\" : rank;\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" className={classes.nodeBox}>\n      {nameElement}\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={classes.rankContainer}\n      >\n        <div className={classes.rankText}>{rankText}</div>\n      </Box>\n    </Box>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentNode } from \"../../models/TournamentNode\";\nimport { RankedRatingName } from \"./RankedRatingName\";\n\nconst SIDE_MARGIN = \"60px\";\nconst BORDER = \"3px\";\nconst NODE_PADDING = \"3px\";\nconst VERTICAL_MARGIN = \"1px\";\n\nconst useStyle = makeStyles(() => ({\n  item: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n\n    \"& p\": {\n      padding: NODE_PADDING,\n      margin: 0,\n      textShadow: \"rgb(34, 34, 34) 1px 1px 1px\",\n      fontSize: \"14px\",\n      fontFamily: '\"Roboto Light\", sans-serif',\n      borderWidth: 0,\n      borderRadius: NODE_PADDING,\n      minWidth: \"100px\",\n      textAlign: \"center\",\n    },\n  },\n\n  itemChildren: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n\n  itemChild: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-end\",\n    marginTop: VERTICAL_MARGIN,\n    marginBottom: VERTICAL_MARGIN,\n    position: \"relative\",\n\n    \"&:before\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: 0,\n      transform: \"translateX(100%)\",\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n    },\n\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      backgroundColor: \"#fff\",\n      top: \"50%\",\n\n      right: `calc(-${SIDE_MARGIN} / 2)`,\n      // height: `calc(75% + ${VERTICAL_MARGIN} * 2)`,\n      height: `calc(50% + ${VERTICAL_MARGIN} * 2)`,\n      width: BORDER,\n    },\n\n    \"&:not(:last-child):not(:first-child)\": {\n      \"&:after\": {\n        transform: \"translateY(-50%) scaleY(2)\",\n      },\n    },\n\n    \"&:last-child\": {\n      \"&:after\": {\n        transform: \"translateY(-100%)\",\n      },\n    },\n\n    \"&:only-child:after\": {\n      display: \"none\",\n    },\n  },\n\n  itemParent: {\n    position: \"relative\",\n    marginLeft: SIDE_MARGIN,\n    display: \"flex\",\n    alignItems: \"center\",\n\n    \"&:after\": {\n      position: \"absolute\",\n      content: '\"\"',\n      width: `calc(${SIDE_MARGIN} / 2)`,\n      height: BORDER,\n      left: 0,\n      top: \"50%\",\n      backgroundColor: \"#fff\",\n      transform: \"translateX(-100%)\",\n    },\n  },\n}));\n\ninterface Props {\n  tournament: TournamentNode;\n  promotedUser?: string;\n  depth: number;\n  config: {\n    depthLimit: number;\n    defendingChampion?: string;\n  };\n}\n\nexport const GameNode = (props: Props) => {\n  const { tournament, depth, config, promotedUser } = props;\n  const classes = useStyle();\n  const nextPromotedUser = tournament.user?.user_id;\n  if (tournament.children.length === 0 || config.depthLimit <= depth) {\n    return (\n      <RankedRatingName\n        user={tournament.user}\n        rank={tournament.rank}\n        defendingChampion={\n          tournament.user?.user_id === config.defendingChampion\n        }\n        winner={\n          promotedUser !== undefined &&\n          tournament.user?.user_id === promotedUser\n        }\n      />\n    );\n  } else {\n    return (\n      <div className={classes.item}>\n        <div className={classes.itemParent}>\n          <RankedRatingName\n            user={tournament.user}\n            rank={tournament.rank}\n            defendingChampion={\n              tournament.user?.user_id === config.defendingChampion\n            }\n            winner={\n              promotedUser !== undefined &&\n              tournament.user?.user_id === promotedUser\n            }\n          />\n        </div>\n        <div className={classes.itemChildren}>\n          {tournament.children.map((child, i) => (\n            <div key={i} className={classes.itemChild}>\n              <GameNode\n                tournament={child}\n                promotedUser={nextPromotedUser}\n                depth={depth + 1}\n                config={config}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport { BattleResult, LeagueEntry } from \"../../models/TournamentNode\";\nimport { RatingName } from \"../RatingName\";\n\nconst UserEntryRow = (props: {\n  entry: LeagueEntry;\n  maxResultCount: number;\n}) => {\n  const { entry, maxResultCount } = props;\n  return (\n    <TableRow>\n      <TableCell align=\"right\">{`${entry.provisional_rank}${ordinalSuffixOf(\n        entry.provisional_rank\n      )}`}</TableCell>\n      <TableCell>\n        <RatingName rating={entry.user.rating}>{entry.user.user_id}</RatingName>\n      </TableCell>\n      {Array.from(Array(maxResultCount).keys()).map((e, i) => {\n        const result = entry.results[i];\n        if (result) {\n          return (\n            <TableCell key={i} align=\"center\">\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                {result.opponent && (\n                  <RatingName rating={result.opponent.rating}>\n                    {result.opponent.user_id}\n                  </RatingName>\n                )}\n                <span>{formatBattleResult(result.result)}</span>\n                <span>{formatRank(result.result)}</span>\n              </Box>\n            </TableCell>\n          );\n        } else {\n          return <TableCell key={i}>{i + 1}回戦</TableCell>;\n        }\n      })}\n      <TableCell align=\"right\">{entry.win_count}</TableCell>\n      <TableCell align=\"right\">{entry.rank_sum}</TableCell>\n    </TableRow>\n  );\n};\n\ninterface Props {\n  league: LeagueEntry[];\n  promotionRank?: number;\n  dropRank?: number;\n}\n\nexport const LeagueTable = (props: Props) => {\n  const { league } = props;\n  const maxResultCount = Math.max(...league.map((e) => e.results.length));\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"right\">順位</TableCell>\n            <TableCell>ユーザー</TableCell>\n            {Array.from(Array(maxResultCount).keys()).map((e, i) => (\n              <TableCell key={i} align=\"center\">\n                {i + 1}回戦\n              </TableCell>\n            ))}\n            <TableCell align=\"right\">勝利数</TableCell>\n            <TableCell align=\"right\">順位合計</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.league.map((entry) => {\n            if (entry.provisional_rank === props.promotionRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      昇格ライン\n                    </TableCell>\n                  </TableRow>\n                </Fragment>\n              );\n            } else if (entry.provisional_rank === props.dropRank) {\n              return (\n                <Fragment key={entry.user.user_id}>\n                  <TableRow>\n                    <TableCell colSpan={maxResultCount + 4}>\n                      残留ライン\n                    </TableCell>\n                  </TableRow>\n                  <UserEntryRow entry={entry} maxResultCount={maxResultCount} />\n                </Fragment>\n              );\n            } else {\n              return (\n                <UserEntryRow\n                  entry={entry}\n                  maxResultCount={maxResultCount}\n                  key={entry.user.user_id}\n                />\n              );\n            }\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nconst formatBattleResult = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"SkipWin\":\n      return \"○\";\n    case \"Lose\":\n    case \"SkipLose\":\n      return \"×\";\n    case \"NotYet\":\n    case \"Writer\":\n      return \"-\";\n  }\n};\n\nconst formatRank = (battleResult: BattleResult) => {\n  switch (battleResult.result) {\n    case \"Win\":\n    case \"Lose\":\n      const rank = battleResult.rank;\n      return `${rank}${ordinalSuffixOf(rank)}`;\n    default:\n      return \"-\";\n  }\n};\n\nconst ordinalSuffixOf = (i: number): \"st\" | \"nd\" | \"rd\" | \"th\" => {\n  const j = i % 10;\n  const k = i % 100;\n  if (j === 1 && k !== 11) {\n    return \"st\";\n  }\n  if (j === 2 && k !== 12) {\n    return \"nd\";\n  }\n  if (j === 3 && k !== 13) {\n    return \"rd\";\n  }\n  return \"th\";\n};\n","import useSWR from \"swr\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { TournamentResponse } from \"../models/TournamentNode\";\nimport { UserHistory } from \"../models/UserHistory\";\n\nconst fetchTournamentSeason5 = async (): Promise<TournamentResponse> => {\n  const usersResponse = await fetch(\n    \"https://atcoder-tournament.herokuapp.com/api/users\"\n  );\n  const usersText = await usersResponse.text();\n\n  const previousBracketsResponse = await fetch(\"./bracket-4.json\");\n  const previousBracketsText = await previousBracketsResponse.text();\n\n  const ratingResponse = await fetch(\"./ratings.json\");\n  const ratingText = await ratingResponse.text();\n\n  const wasm = await import(\"../tournament-constructor/build\");\n\n  const result = wasm.construct_tournament(\n    usersText,\n    previousBracketsText,\n    ratingText,\n    \"SSRS\"\n  );\n  return JSON.parse(result);\n};\n\nexport const useTournament = (seasonId: string) => {\n  const fetcher = (url: string) => {\n    if (seasonId === \"5\") {\n      return fetchTournamentSeason5();\n    } else {\n      return fetch(url)\n        .then((response) => response.json())\n        .then((response) => response as TournamentResponse);\n    }\n  };\n  const url = `./bracket-${seasonId}.json`;\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useUserHistories = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as UserHistory[]);\n  };\n\n  const url = \"./histories.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n\nexport const useTournamentList = () => {\n  const fetcher = (url: string) => {\n    return fetch(url)\n      .then((response) => response.json())\n      .then((response) => response as TournamentHistory[]);\n  };\n\n  const url = \"./tournaments.json\";\n  return useSWR(url, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n  });\n};\n","import {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useState } from \"react\";\nimport { GameNode } from \"../components/GameNode/GameNode\";\nimport { LeagueTable } from \"../components/LeagueTable/LeagueTable\";\nimport { User } from \"../models/TournamentNode\";\nimport { useTournament } from \"../utils/API\";\n\ninterface Props {\n  seasonId: string;\n}\n\nconst SingleWinnerTable = ({ top4 }: { top4?: { [_: number]: User[] } }) => {\n  if (!top4) {\n    return null;\n  }\n  return (\n    <Container>\n      {Object.entries(top4).map(([rank, users]) => {\n        const variant = rank === \"1\" ? \"h3\" : rank === \"2\" ? \"h4\" : \"h5\";\n        const title =\n          rank === \"1\" ? \"優勝\" : rank === \"2\" ? \"準優勝\" : `${rank}位`;\n        return (\n          <Box m={2} key={rank}>\n            <Typography variant={variant} align=\"center\" color=\"textPrimary\">\n              {title}\n            </Typography>\n            {users.map((user) => (\n              <Typography\n                variant={variant}\n                align=\"center\"\n                color=\"textPrimary\"\n                key={user.user_id}\n              >\n                {user.user_id}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Container>\n  );\n};\nconst AntTab = withStyles(() => ({\n  root: {\n    minWidth: 10,\n  },\n  selected: {},\n}))(Tab);\n\nexport const Tournament = (props: Props) => {\n  const tournament = useTournament(props.seasonId).data;\n  const [selectedDivision, setSelectedDivision] = useState<number>(0);\n  const [showTop16, setShowTop16] = useState(false);\n\n  const keys = Object.keys(tournament ?? {});\n  const bracket =\n    keys[selectedDivision] && tournament\n      ? tournament[keys[selectedDivision]]\n      : null;\n\n  const node = bracket?.node;\n  const league = bracket?.league;\n  const defendingChampion = bracket?.defending_champion;\n  const depthLimit = showTop16 ? 4 : 100;\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n          第{props.seasonId}期\n        </Typography>\n        <Typography\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          display=\"inline\"\n          noWrap\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Tabs\n          variant=\"fullWidth\"\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {keys.map((key, i) => (\n            <AntTab label={`${key}`} key={i} />\n          ))}\n        </Tabs>\n        {tournament ? (\n          <>\n            {keys[selectedDivision] && (\n              <SingleWinnerTable\n                top4={tournament[keys[selectedDivision]].top4}\n              />\n            )}\n            <Button onClick={() => setShowTop16(!showTop16)}>\n              {showTop16 ? \"全て表示する\" : \"Top16のみ表示する\"}\n            </Button>\n            <Box display=\"flex\" justifyContent=\"center\">\n              {node && (\n                <GameNode\n                  tournament={node}\n                  depth={0}\n                  config={{ depthLimit, defendingChampion }}\n                />\n              )}\n            </Box>\n            {league && league.length > 0 && (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h4\" align=\"center\" color=\"textPrimary\">\n                  順位決定リーグ\n                </Typography>\n                <LeagueTable\n                  league={league}\n                  promotionRank={bracket?.promotion_rank}\n                  dropRank={bracket?.drop_rank}\n                />\n              </Box>\n            )}\n          </>\n        ) : (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n          >\n            <CircularProgress />\n          </Box>\n        )}\n      </Grid>\n    </>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { TournamentHistory } from \"../models/TournamentHistory\";\nimport { useTournamentList } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  caption: {\n    marginRight: 20,\n    minWidth: 80,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nconst Winners = (e: TournamentHistory) => {\n  const classes = useStyles();\n  const winners = e.ranking\n    .map(([rank, entry]) => ({\n      rank: rank + 1,\n      userId: entry.user_id,\n    }))\n    .sort((a, b) => a.rank - b.rank)\n    .slice(0, 4);\n  return (\n    <Paper className={classes.paper}>\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <Typography variant=\"h3\">\n            <Link\n              component={RouterLink}\n              to={`/tournament/${e.season}`}\n              className={classes.link}\n            >\n              第{e.season}期\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item xs={6} direction=\"column\" spacing={2}>\n          {winners.map((winner) => {\n            if (winner.rank === 1) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h4\">\n                    優勝\n                  </Typography>\n                  <Typography variant=\"h2\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else if (winner.rank === 2) {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    準優勝\n                  </Typography>\n                  <Typography variant=\"h4\">{winner.userId}</Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box display=\"flex\" alignItems=\"center\">\n                  <Typography className={classes.caption} variant=\"h6\">\n                    第{winner.rank}位\n                  </Typography>\n                  <Typography variant=\"h5\">{winner.userId}</Typography>\n                </Box>\n              );\n            }\n          })}\n          {e.expandable && (\n            <Box marginTop={2}>\n              <Link\n                className={classes.link}\n                component={RouterLink}\n                to={`/ranking/${e.season}`}\n              >\n                全てのランキングを表示\n              </Link>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport const TournamentListPage = () => {\n  const classes = useStyles();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  tournaments.sort((a, b) => b.season.localeCompare(a.season));\n\n  return (\n    <Container className={classes.root}>\n      <Typography variant=\"h2\">過去の開催</Typography>\n      <Container>\n        {tournaments.map((e) => (\n          <Winners key={e.season} {...e} />\n        ))}\n      </Container>\n    </Container>\n  );\n};\n","import {\n  Box,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport React from \"react\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { useTournamentList } from \"../utils/API\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n  table: {\n    maxWidth: 800,\n  },\n}));\nexport const TournamentRankingPage = () => {\n  const classes = useStyles();\n  const { seasonId } = useParams<{ seasonId: string }>();\n  const tournaments = useTournamentList().data;\n  if (!tournaments) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const ranking = tournaments.find(\n    (tournament) => tournament.season === seasonId && tournament.expandable\n  )?.ranking;\n  if (!ranking) {\n    return <p>not found</p>;\n  }\n  ranking.sort((a, b) => a[0] - b[0]);\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <TableContainer className={classes.table}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>総合順位</TableCell>\n              <TableCell>クラス</TableCell>\n              <TableCell>クラス内順位</TableCell>\n              <TableCell>ユーザー名</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ranking.map(([rank, entry]) => (\n              <TableRow key={rank}>\n                <TableCell>{rank + 1}</TableCell>\n                <TableCell>{entry.class}</TableCell>\n                <TableCell>{entry.rank}</TableCell>\n                <TableCell>\n                  <Typography variant=\"h6\">\n                    <Link\n                      className={classes.link}\n                      component={RouterLink}\n                      to={`/user/${entry.user_id}`}\n                    >\n                      {entry.user_id}\n                    </Link>\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n","import { Box, Grid, Paper, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst formatTopK = (season: number, topK: number, klass: string) => {\n  if (topK === 1) {\n    if (klass === \"A\" || klass === \"A1\") {\n      return `第${season}期王者`;\n    } else {\n      return \"優勝\";\n    }\n  } else if (topK === 2) {\n    return \"準優勝\";\n  } else {\n    return `ベスト${topK}`;\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 800,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: 30,\n  },\n  link: {\n    color: \"white\",\n  },\n}));\n\nexport const UserHistoryPage = () => {\n  const classes = useStyles();\n  const { user_id } = useParams<{ user_id: string }>();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const userHistory =\n    histories.find((e) => e.user_id === user_id)?.histories ?? {};\n  const sorted = Object.entries(userHistory)\n    .map(([season, result]) => ({\n      season: parseInt(season),\n      result,\n    }))\n    .sort((a, b) => b.season - a.season);\n\n  const winCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 1).length;\n  const secondCount = sorted\n    .filter((e) => e.result.class === \"A\" || e.result.class === \"A1\")\n    .filter((e) => e.result.top_k === 2).length;\n  const a1Count = sorted.filter((e) => e.result.class === \"A1\").length;\n\n  return (\n    <Container className={classes.root}>\n      <Grid container>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <Link\n              className={classes.link}\n              href={`https://atcoder.jp/users/${user_id}`}\n            >\n              {user_id}\n            </Link>\n          </Typography>\n          {winCount > 0 && (\n            <Typography variant=\"h6\">優勝{winCount}回</Typography>\n          )}\n          {secondCount > 0 && (\n            <Typography variant=\"h6\">準優勝{secondCount}回</Typography>\n          )}\n          {a1Count > 0 && (\n            <Typography variant=\"h6\">A1在籍{a1Count}期</Typography>\n          )}\n        </Grid>\n        <Grid item xs={12}>\n          {sorted.map((e) => (\n            <Paper key={e.season} className={classes.paper}>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Typography variant=\"h5\">\n                    <Link\n                      component={RouterLink}\n                      to={`/tournament/${e.season}`}\n                      className={classes.link}\n                    >\n                      第{e.season}期 {e.result.class}クラス\n                    </Link>\n                  </Typography>\n                </Grid>\n                <Grid item xs={4} direction=\"column\">\n                  <Typography variant=\"body1\">トーナメント</Typography>\n                  <Typography variant=\"h4\">\n                    {formatTopK(e.season, e.result.top_k, e.result.class)}\n                  </Typography>\n                </Grid>\n                {e.result.final_rank && (\n                  <Grid item xs direction=\"column\">\n                    <Typography variant=\"body1\">最終順位</Typography>\n                    <Typography variant=\"h4\">\n                      {e.result.final_rank}位\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          ))}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useUserHistories } from \"../utils/API\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    color: \"white\",\n  },\n}));\nexport const RecordPage = () => {\n  const classes = useStyles();\n  const histories = useUserHistories().data;\n  if (!histories) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n  const users = histories\n    .map((e) => {\n      const userId = e.user_id;\n      const histories = Object.values(e.histories).filter(\n        (h) => h.class === \"A1\" || h.class === \"A\"\n      );\n      const winCount = histories.filter((h) => h.top_k === 1).length;\n      const secondCount = histories.filter((h) => h.top_k === 2).length;\n      const fourCount = histories.filter((h) => h.top_k === 4).length;\n      const a1Count = histories.filter((h) => h.class === \"A1\").length;\n      return {\n        a1Count,\n        winCount,\n        secondCount,\n        fourCount,\n        userId,\n      };\n    })\n    .filter((x) => x.a1Count + x.winCount + x.secondCount + x.fourCount > 0);\n  users.sort((a, b) => {\n    if (a.winCount !== b.winCount) {\n      return b.winCount - a.winCount;\n    }\n    if (a.secondCount !== b.secondCount) {\n      return b.secondCount - a.secondCount;\n    }\n    if (a.fourCount !== b.fourCount) {\n      return b.fourCount - a.fourCount;\n    }\n    if (a.a1Count !== b.a1Count) {\n      return b.a1Count - a.a1Count;\n    }\n    return a.userId.localeCompare(b.userId);\n  });\n\n  return (\n    <Container>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell variant=\"head\">ユーザー</TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              準優勝\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              ベスト4\n            </TableCell>\n            <TableCell variant=\"head\" align=\"center\">\n              A1在籍\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.userId}>\n              <TableCell variant=\"head\">\n                <Typography variant=\"h6\">\n                  <Link\n                    className={classes.link}\n                    component={RouterLink}\n                    to={`/user/${user.userId}`}\n                  >\n                    {user.userId}\n                  </Link>\n                </Typography>\n              </TableCell>\n              <TableCell align=\"center\">{user.winCount}</TableCell>\n              <TableCell align=\"center\">{user.secondCount}</TableCell>\n              <TableCell align=\"center\">{user.fourCount}</TableCell>\n              <TableCell align=\"center\">{user.a1Count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Container>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { RegisterPage } from \"./pages/RegisterPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { TournamentListPage } from \"./pages/TournamentListPage\";\nimport { TournamentRankingPage } from \"./pages/TournamentRankingPage\";\nimport { UserHistoryPage } from \"./pages/UserHistoryPage\";\nimport { SEASON_ID } from \"./utils/Constants\";\nimport { RecordPage } from \"./pages/RecordPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"relative\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/5\"\n                className={classes.link}\n              >\n                第5期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/4\"\n                className={classes.link}\n              >\n                第4期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/tournament/3\"\n                className={classes.link}\n              >\n                第3期\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/past\"\n                className={classes.link}\n              >\n                過去の開催\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/record\"\n                className={classes.link}\n              >\n                記録\n              </Link>\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/register\"\n                className={classes.link}\n              >\n                参加登録\n              </Link>\n              <Link\n                href=\"https://github.com/kenkoooo/atcoder-tournament/tree/master/rules\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                variant=\"button\"\n                color=\"textPrimary\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/user/:user_id([0-9a-zA-Z_]+)\">\n              <UserHistoryPage />\n            </Route>\n            <Route path=\"/past\">\n              <TournamentListPage />\n            </Route>\n            <Route path=\"/record\">\n              <RecordPage />\n            </Route>\n            <Route path=\"/ranking/:seasonId([0-9]+)\">\n              <TournamentRankingPage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","export const SEASON_ID = 5;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}