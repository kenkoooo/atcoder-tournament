{"version":3,"sources":["utils/API.ts","pages/RulePage.tsx","components/TournamentBracket/GameNode.tsx","components/TournamentBracket/index.tsx","utils/ResultResolver.ts","components/TournamentBoard.tsx","components/TournamentBracket/TreeMaker.ts","utils/Constants.ts","pages/Tournament.tsx","App.tsx","index.tsx"],"names":["RATING_MAP_CACHE","RulePage","Container","maxWidth","CssBaseline","Typography","component","variant","align","color","gutterBottom","Link","href","useStyle","makeStyles","red","orange","yellow","blue","lightBlue","green","brown","grey","RatingName","props","c","classes","rating","getRating","children","className","RankedRatingName","node","rank","Tooltip","title","arrow","name","GameNode","length","map","i","key","TournamentBracket","root","resolveTournament","makeUserInfo","resolveByDfs","depth","maxDepth","index","child","userInfoList","forEach","user","userInfo","push","childrenWithResult","sort","a","b","pickWinner","userId","getDepth","Math","max","TournamentBoard","atCoderUserIds","contestResults","ratingMap","players","leafCount","leafPlayers","player1","player2","currentPlayers","nextPlayers","node1","node2","makeTree","resolvedRoot","nextRank","size","get","fetchFixedUserList","seasonId","fetch","then","response","json","userIds","fetchRatingMap","allUsers","userMap","Map","set","user_id","loadRatingMap","Promise","all","registeredUsers","validUsers","localeCompare","CONTEST_MAP_CACHE","fetchSingleContestMap","contestId","loadingContestId","contestResult","results","StandingsData","result","TotalResult","Score","UserScreenName","Rank","promise","loadSingleContestMap","useStyles","theme","heroContent","padding","spacing","Tournament","useState","setAtCoderUserIds","undefined","setRatingMap","setContestResults","selectedDivision","setSelectedDivision","useEffect","fetchOrderedUserList","users","fetchContestResults","maps","divisionCount","ceil","divisionMembers","divisions","division","reverse","Grid","container","justify","direction","Tabs","value","onChange","e","v","centered","d","Tab","label","createMuiTheme","palette","type","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","textDecoration","link","margin","cardHeader","backgroundColor","cardPricing","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","App","now","Date","AppBar","position","elevation","Toolbar","RouterLink","noWrap","to","exact","path","render","match","params","id","toString","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5c9b75f.chunk.js","sourcesContent":["async function fetchFixedUserList(seasonId: string) {\n  const userIds: string[] = await fetch(\n    `./users-${seasonId}.json`\n  ).then((response) => response.json());\n  return userIds;\n}\n\nasync function fetchUserList(seasonId: string) {\n  const userIds: string[] = await fetch(\n    `https://atcoder-tournament.herokuapp.com/api/users?season_id=${seasonId}`\n  ).then((response) => response.json());\n  return userIds;\n}\n\nlet RATING_MAP_CACHE: Promise<Map<string, number>> | undefined;\nexport function fetchRatingMap() {\n  async function loadRatingMap() {\n    const allUsers: { user_id: string; rating: number }[] = await fetch(\n      \"./ratings.json\"\n    ).then((response) => response.json());\n    const userMap = new Map<string, number>();\n    allUsers.forEach((user) => {\n      userMap.set(user.user_id, user.rating);\n    });\n    return userMap;\n  }\n  if (!RATING_MAP_CACHE) {\n    RATING_MAP_CACHE = loadRatingMap();\n  }\n  return RATING_MAP_CACHE;\n}\n\nexport async function fetchOrderedUserList(seasonId: string) {\n  const [userMap, registeredUsers] = await Promise.all([\n    fetchRatingMap(),\n    fetchFixedUserList(seasonId),\n  ]);\n\n  const validUsers = [] as { rating: number; userId: string }[];\n  registeredUsers.forEach((userId) => {\n    const rating = userMap.get(userId);\n    if (rating) {\n      validUsers.push({ rating, userId });\n    }\n  });\n  validUsers.sort((a, b) => {\n    if (a.rating === b.rating) {\n      return a.userId.localeCompare(b.userId);\n    } else {\n      return b.rating - a.rating;\n    }\n  });\n  return validUsers.map((user) => user.userId);\n}\n\nconst CONTEST_MAP_CACHE = new Map<string, Promise<Map<string, number>>>();\nfunction fetchSingleContestMap(contestId: string) {\n  async function loadSingleContestMap(loadingContestId: string) {\n    const contestResult = await fetch(\n      `./${loadingContestId}.json`\n    ).then((response) => response.json());\n    const results: {\n      Rank: number;\n      UserScreenName: string;\n      TotalResult: { Score: number };\n    }[] = contestResult.StandingsData;\n    const map = new Map<string, number>();\n    results.forEach((result) => {\n      if (result.TotalResult.Score > 0) {\n        map.set(result.UserScreenName, result.Rank);\n      }\n    });\n    return map;\n  }\n\n  const map = CONTEST_MAP_CACHE.get(contestId);\n  if (!map) {\n    const promise = loadSingleContestMap(contestId);\n    CONTEST_MAP_CACHE.set(contestId, promise);\n    return promise;\n  }\n\n  return map;\n}\n\nexport async function fetchContestResults() {\n  return Promise.all([\n    fetchSingleContestMap(\"abc177\"),\n    // fetchSingleContestMap(\"abc175\"),\n    // fetchSingleContestMap(\"abc176\"),\n  ]);\n}\n","import { Container, CssBaseline, Link, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const RulePage = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <CssBaseline />\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        ABC Tournament ルール\n      </Typography>\n      <Typography variant=\"h5\" color=\"textSecondary\" component=\"p\">\n        <ul>\n          <li>ABC の結果を使ったトーナメント戦です。</li>\n          <li>\n            各試合は 1 対 1 で行われ、AtCoder の ABC\n            級のコンテストでの順位が高かった方が勝者となり、次の試合に進出します。\n          </li>\n          <li>\n            ABC級のコンテストとはレーティング更新対象が 0 - 1999\n            のコンテストです。\n          </li>\n          <li>\n            同順位の場合は2020年8月29日 19:00\n            JST時点でのレートが高い方を勝者とします。\n          </li>\n          <li>\n            コンテストにおいて以下に該当するユーザーは\n            (コンテストで正の点数を取った人数 + 1) 位となります。\n            <ul>\n              <li>コンテストに参加登録していないユーザー</li>\n              <li>コンテストに参加登録したが1回も提出していないユーザー</li>\n              <li>\n                コンテストに参加登録し、1回以上提出したが点数が得られなかったユーザー\n              </li>\n            </ul>\n          </li>\n          <li>\n            各試合の対象となる ABC は以下のとおりです。\n            <ul>\n              <li>\n                1 回戦 -{\" \"}\n                <Link href=\"https://atcoder.jp/contests/abc177\">\n                  AtCoder Beginner Contest 177\n                </Link>\n              </li>\n              <li>2 回戦以降 - AtCoder からアナウンスがあり次第更新します。</li>\n            </ul>\n          </li>\n        </ul>\n      </Typography>\n    </Container>\n  );\n};\n","import { Link, Tooltip } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { BracketNode } from \"../../models/BracketNode\";\nimport {\n  red,\n  orange,\n  yellow,\n  blue,\n  lightBlue,\n  green,\n  brown,\n  grey,\n} from \"@material-ui/core/colors\";\nconst useStyle = makeStyles(() => ({\n  red: {\n    color: red[500],\n  },\n  orange: {\n    color: orange[500],\n  },\n  yellow: {\n    color: yellow[500],\n  },\n  blue: {\n    color: blue[800],\n  },\n  lightBlue: {\n    color: lightBlue[300],\n  },\n  green: {\n    color: green[400],\n  },\n  brown: {\n    color: brown[400],\n  },\n  grey: {\n    color: grey[500],\n  },\n}));\n\nconst RatingName = (props: {\n  children: string;\n  getRating: (userId: string) => number | undefined;\n}) => {\n  const classes = useStyle();\n  const rating = props.getRating(props.children);\n  if (!rating) {\n    return <p>{props.children}</p>;\n  }\n  let c: string;\n  if (rating < 400) {\n    c = classes.grey;\n  } else if (rating < 800) {\n    c = classes.brown;\n  } else if (rating < 1200) {\n    c = classes.green;\n  } else if (rating < 1600) {\n    c = classes.lightBlue;\n  } else if (rating < 2000) {\n    c = classes.blue;\n  } else if (rating < 2400) {\n    c = classes.yellow;\n  } else if (rating < 2800) {\n    c = classes.orange;\n  } else {\n    c = classes.red;\n  }\n  return (\n    <p>\n      <Link className={c} href={`https://atcoder.jp/users/${props.children}`}>\n        {props.children}\n      </Link>\n    </p>\n  );\n};\n\nconst RankedRatingName = (props: {\n  node: BracketNode;\n  getRating: (userId: string) => number | undefined;\n}) => {\n  const { node, getRating } = props;\n  return node.rank ? (\n    <Tooltip title={`Rank: ${node.rank}`} arrow>\n      <div>\n        <RatingName getRating={getRating}>{node.name}</RatingName>\n      </div>\n    </Tooltip>\n  ) : (\n    <div>\n      <RatingName getRating={getRating}>{node.name}</RatingName>\n    </div>\n  );\n};\n\ninterface Props {\n  node: BracketNode;\n  getRating: (userId: string) => number | undefined;\n}\n\nexport const GameNode = (props: Props) => {\n  const { node, getRating } = props;\n\n  if (node.children.length === 0) {\n    return <RankedRatingName node={node} getRating={getRating} />;\n  } else {\n    return (\n      <div className=\"item\">\n        <div className=\"item-parent\">\n          <RankedRatingName node={node} getRating={getRating} />\n        </div>\n        <div className=\"item-children\">\n          {node.children.map((node, i) => (\n            <div key={i} className=\"item-child\">\n              <GameNode getRating={getRating} node={node} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport { BracketNode } from \"../../models/BracketNode\";\nimport { GameNode } from \"./GameNode\";\n\ninterface Props {\n  root: BracketNode;\n  getRating: (userId: string) => number | undefined;\n}\n\nexport const TournamentBracket = (props: Props) => {\n  return <GameNode getRating={props.getRating} node={props.root} />;\n};\n","import { BracketNode } from \"../models/BracketNode\";\n\ninterface UserInfo {\n  userId: string;\n  rating: number;\n  rank: number;\n}\n\nconst getDepth = (node: BracketNode, depth: number) => {\n  let maxDepth = depth;\n  node.children.forEach((child) => {\n    maxDepth = Math.max(getDepth(child, depth + 1), maxDepth);\n  });\n  return maxDepth;\n};\n\nconst pickWinner = (userInfoList: UserInfo[]) => {\n  const sorted = userInfoList.sort((a, b) => {\n    if (a.rank === b.rank) {\n      return b.rating - a.rating;\n    }\n    return a.rank - b.rank;\n  });\n  return sorted[0];\n};\n\nconst resolveByDfs = (\n  node: BracketNode,\n  depth: number,\n  maxDepth: number,\n  makeUserInfo: (index: number, userId: string) => UserInfo | undefined\n): BracketNode => {\n  const index = maxDepth - depth - 1;\n  const children = node.children.map((child) =>\n    resolveByDfs(child, depth + 1, maxDepth, makeUserInfo)\n  );\n  const userInfoList = [] as UserInfo[];\n  children.forEach((user) => {\n    const userInfo = makeUserInfo(index, user.name);\n    if (userInfo) {\n      userInfoList.push(userInfo);\n    }\n  });\n\n  if (children.length === 0 || children.length !== userInfoList.length) {\n    return { name: node.name, children };\n  }\n\n  const childrenWithResult = children.map((child, i) => ({\n    ...userInfoList[i],\n    ...child,\n  }));\n  const winner = pickWinner(userInfoList);\n  return { name: winner.userId, children: childrenWithResult };\n};\n\nexport const resolveTournament = (\n  root: BracketNode,\n  makeUserInfo: (index: number, userId: string) => UserInfo | undefined\n) => {\n  const depth = getDepth(root, 0);\n  return resolveByDfs(root, 0, depth, makeUserInfo);\n};\n","import React from \"react\";\nimport { TournamentBracket } from \"./TournamentBracket\";\nimport { makeTree } from \"./TournamentBracket/TreeMaker\";\nimport { resolveTournament } from \"../utils/ResultResolver\";\n\ninterface Props {\n  atCoderUserIds: string[];\n  ratingMap?: Map<string, number>;\n  contestResults?: Map<string, number>[];\n}\n\nexport const TournamentBoard = (props: Props) => {\n  const { atCoderUserIds, contestResults, ratingMap } = props;\n\n  const makeUserInfo = (index: number, userId: string) => {\n    if (!contestResults || contestResults.length <= index) {\n      return undefined;\n    }\n    const resultMap = contestResults[index];\n    const nextRank = resultMap.size + 1;\n    const rank = contestResults[index].get(userId) ?? nextRank;\n    const rating = ratingMap?.get(userId) ?? 0;\n    return { userId, rank, rating };\n  };\n\n  const root =\n    atCoderUserIds.length > 0\n      ? makeTree(atCoderUserIds)\n      : { name: \"loading\", children: [] };\n  const resolvedRoot = resolveTournament(root, makeUserInfo);\n\n  return (\n    <TournamentBracket\n      root={resolvedRoot}\n      getRating={(userId) => ratingMap?.get(userId)}\n    />\n  );\n};\n","import { BracketNode } from \"../../models/BracketNode\";\nimport { UNDEFINED_NODE } from \"../../utils/Constants\";\n\nexport const makeTree = (players: string[]): BracketNode => {\n  let leafCount = 1;\n  while (leafCount * 2 <= players.length) {\n    leafCount *= 2;\n  }\n\n  let leafPlayers = [] as BracketNode[];\n  for (let i = 0; i < leafCount; i++) {\n    if (leafCount + i < players.length) {\n      const player1 = players[i];\n      const player2 = players[leafCount + i];\n      leafPlayers.push({\n        name: UNDEFINED_NODE,\n        children: [\n          { name: player2, children: [] },\n          { name: player1, children: [] },\n        ],\n      });\n    } else {\n      leafPlayers.push({\n        name: players[i],\n        children: [],\n      });\n    }\n  }\n\n  let currentPlayers = leafPlayers;\n\n  while (currentPlayers.length > 1) {\n    const nextPlayers = [];\n    for (let i = 0; i < currentPlayers.length; i += 2) {\n      const node1 = currentPlayers[i];\n      if (i + 1 === currentPlayers.length) {\n        nextPlayers.push({ name: UNDEFINED_NODE, children: [node1] });\n      } else {\n        const node2 = currentPlayers[i + 1];\n        nextPlayers.push({ name: UNDEFINED_NODE, children: [node1, node2] });\n      }\n    }\n    currentPlayers = nextPlayers;\n  }\n\n  return currentPlayers[0];\n};\n","export const SEASON_ID = 1;\nexport const DEADLINE = 1598695200;\n\nexport const UNDEFINED_NODE = \"...\";\nexport const MAXIMUM_MEMBER = 128;\n","import {\n  Container,\n  CssBaseline,\n  Grid,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { TournamentBoard } from \"../components/TournamentBoard\";\nimport {\n  fetchContestResults,\n  fetchOrderedUserList,\n  fetchRatingMap,\n} from \"../utils/API\";\nimport \"./tournament.scss\";\nimport { MAXIMUM_MEMBER } from \"../utils/Constants\";\n\nconst formatClass = (index: number) => {\n  if (index === 0) {\n    return \"A\";\n  }\n  if (index < 3) {\n    return `B${index}`;\n  }\n  if (index < 7) {\n    return `C${index - 2}`;\n  }\n  return `D${index - 6}`;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n}));\n\ninterface Props {\n  seasonId: string;\n}\n\nexport const Tournament = (props: Props) => {\n  const classes = useStyles();\n  const [atCoderUserIds, setAtCoderUserIds] = useState<string[]>([]);\n  const [ratingMap, setRatingMap] = useState<Map<string, number> | undefined>(\n    undefined\n  );\n  const [contestResults, setContestResults] = useState<\n    Map<string, number>[] | undefined\n  >(undefined);\n  const [selectedDivision, setSelectedDivision] = useState(0);\n\n  useEffect(() => {\n    fetchOrderedUserList(props.seasonId).then((users) =>\n      setAtCoderUserIds(users)\n    );\n  }, [props.seasonId]);\n  useEffect(() => {\n    if (!ratingMap) {\n      fetchRatingMap().then((map) => setRatingMap(map));\n    }\n    if (!contestResults) {\n      fetchContestResults().then((maps) => setContestResults(maps));\n    }\n  });\n\n  const divisionCount = Math.ceil(atCoderUserIds.length / MAXIMUM_MEMBER);\n  const divisionMembers = Math.ceil(\n    atCoderUserIds.length / Math.max(divisionCount, 1)\n  );\n\n  const divisions = [] as string[][];\n  let i = atCoderUserIds.length - 1;\n  while (i >= 0) {\n    const division = [] as string[];\n    while (i >= 0 && division.length < divisionMembers) {\n      division.push(atCoderUserIds[i]);\n      i -= 1;\n    }\n    divisions.push(division.reverse());\n  }\n  divisions.reverse();\n\n  return (\n    <>\n      <CssBaseline />\n      <Grid container justify=\"center\" direction=\"column\">\n        <Typography\n          component=\"h1\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          AtCoder Beginner Contest Tournament\n        </Typography>\n        <Typography\n          component=\"h4\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          シーズン 1\n        </Typography>\n        <Typography\n          component=\"div\"\n          variant=\"body1\"\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          {`参加人数: ${atCoderUserIds.length}`}\n        </Typography>\n        <Tabs\n          value={selectedDivision}\n          onChange={(e, v) => setSelectedDivision(v)}\n          centered\n        >\n          {divisions.map((d, i) => (\n            <Tab label={`CLASS ${formatClass(i)}`} key={i} />\n          ))}\n        </Tabs>\n        <TournamentBoard\n          atCoderUserIds={divisions[selectedDivision] ?? []}\n          ratingMap={ratingMap}\n          contestResults={contestResults}\n        />\n      </Grid>\n    </>\n  );\n};\n","import {\n  AppBar,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Link,\n  MuiThemeProvider,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {\n  HashRouter,\n  Link as RouterLink,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport { RulePage } from \"./pages/RulePage\";\nimport { SubmitPage } from \"./pages/SubmitPage\";\nimport { Tournament } from \"./pages/Tournament\";\nimport { DEADLINE, SEASON_ID } from \"./utils/Constants\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n    textDecoration: \"none\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\nconst App = () => {\n  const classes = useStyles();\n  const now = Date.now() / 1000;\n  return (\n    <HashRouter>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          className={classes.appBar}\n        >\n          <Toolbar className={classes.toolbar}>\n            <Typography\n              component={RouterLink}\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n              to=\"/\"\n            >\n              ABC トーナメント\n            </Typography>\n            <nav>\n              {now < DEADLINE && (\n                <Link\n                  component={RouterLink}\n                  variant=\"button\"\n                  color=\"textPrimary\"\n                  to=\"/submit\"\n                  className={classes.link}\n                >\n                  登録\n                </Link>\n              )}\n              <Link\n                component={RouterLink}\n                variant=\"button\"\n                color=\"textPrimary\"\n                to=\"/rule\"\n                className={classes.link}\n              >\n                ルール\n              </Link>\n            </nav>\n          </Toolbar>\n        </AppBar>\n        <Container component=\"main\" maxWidth={false}>\n          <Switch>\n            <Route\n              exact\n              path=\"/tournament/:id([0-9]+)\"\n              render={({ match }) => {\n                const seasonId: string | undefined = match.params.id;\n                return (\n                  <Tournament seasonId={seasonId ?? SEASON_ID.toString()} />\n                );\n              }}\n            />\n            {/*<Route path=\"/submit\">*/}\n            {/*  <SubmitPage />*/}\n            {/*</Route>*/}\n            <Route path=\"/rule\">\n              <RulePage />\n            </Route>\n            <Redirect path=\"/\" to={`/tournament/${SEASON_ID}`} />\n          </Switch>\n        </Container>\n      </MuiThemeProvider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}